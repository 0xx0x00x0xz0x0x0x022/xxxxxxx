local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local KeyInput = Instance.new("TextBox")
local VerifyButton = Instance.new("TextButton")
local StatusLabel = Instance.new("TextLabel")

ScreenGui.Parent = game:GetService("CoreGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.5, -150, 0.5, -100)
Frame.Size = UDim2.new(0, 300, 0, 200)

Title.Parent = Frame
Title.BackgroundTransparency = 1
Title.Position = UDim2.new(0, 0, 0, 10)
Title.Size = UDim2.new(1, 0, 0, 30)
Title.Font = Enum.Font.GothamBold
Title.Text = "ScriptsBinsAuth"
Title.TextColor3 = Color3.fromRGB(56, 139, 253)
Title.TextSize = 20

KeyInput.Parent = Frame
KeyInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
KeyInput.BorderSizePixel = 0
KeyInput.Position = UDim2.new(0.1, 0, 0.3, 0)
KeyInput.Size = UDim2.new(0.8, 0, 0, 40)
KeyInput.Font = Enum.Font.Gotham
KeyInput.PlaceholderText = "Enter Your Key"
KeyInput.Text = ""
KeyInput.TextColor3 = Color3.fromRGB(255, 255, 255)
KeyInput.TextSize = 14

VerifyButton.Parent = Frame
VerifyButton.BackgroundColor3 = Color3.fromRGB(56, 139, 253)
VerifyButton.BorderSizePixel = 0
VerifyButton.Position = UDim2.new(0.25, 0, 0.6, 0)
VerifyButton.Size = UDim2.new(0.5, 0, 0, 30)
VerifyButton.Font = Enum.Font.GothamBold
VerifyButton.Text = "Verify Key"
VerifyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
VerifyButton.TextSize = 14

StatusLabel.Parent = Frame
StatusLabel.BackgroundTransparency = 1
StatusLabel.Position = UDim2.new(0, 0, 0.8, 0)
StatusLabel.Size = UDim2.new(1, 0, 0, 20)
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.Text = ""
StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
StatusLabel.TextSize = 14

local function getHWID()
    local success, clientId = pcall(function()
        return game:GetService("RbxAnalyticsService"):GetClientId()
    end)
    if success and clientId then
        return clientId
    else
        return "HWID_ERROR"
    end
end

local function getRequestFunction()
    return (syn and syn.request) or (http and http.request) or (fluxus and fluxus.request) or request
end

local function verifyKey(key)
    local apiKey = "GGPGx785Q"
    local hwid = getHWID()
    local url = "https://scriptsbinsauth.vercel.app/api/verify-key"
    local HttpService = game:GetService("HttpService")
    local body = {
        key = key,
        hwid = hwid
    }
    local requestFunc = getRequestFunction()
    if not requestFunc then
        return false, "Executor Not Supported"
    end

    local success, response = pcall(function()
        return requestFunc({
            Url = url,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json",
                ["Authorization"] = "Bearer " .. apiKey
            },
            Body = HttpService:JSONEncode(body)
        })
    end)

    if not success or not response then
        return false, "Connection Error With Server"
    end

    if response.StatusCode == 200 and response.Body then
        local decodeSuccess, data = pcall(function()
            return HttpService:JSONDecode(response.Body)
        end)
        if decodeSuccess and data and data.success and data.luaCode then
            local func, err = loadstring(data.luaCode)
            if func then
                local success_exec, exec_err = pcall(func)
                if success_exec then
                    if _G.ScriptsBinsAuth_VerificationStatus and _G.ScriptsBinsAuth_VerificationStatus.valid then
                        return true, data.message
                    else
                        return false, "Verification Failed After Script Execution."
                    end
                else
                    return false, exec_err or "Failed To Execute Server-Provided Script."
                end
            else
                return false, err or "Failed To Load Server-Provided Script."
            end
        elseif decodeSuccess and data and data.error then
            return false, data.error
        elseif decodeSuccess and data and data.message then
            return false, data.message
        else
            return false, "Invalid Server Response Format."
        end
    else
        local errorMsg = "Server Error: " .. response.StatusCode
        if response.Body then
            local decodeErrorSuccess, decodedError = pcall(function()
                return HttpService:JSONDecode(response.Body)
            end)
            if decodeErrorSuccess and decodedError and decodedError.error then
                errorMsg = decodedError.error
            end
        end
        return false, errorMsg
    end
end

VerifyButton.MouseButton1Click:Connect(function()
    local key = KeyInput.Text
    if key == "" then
        StatusLabel.Text = "Please Enter A Key"
        StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
        return
    end
    VerifyButton.Text = "Verifying..."
    StatusLabel.Text = "Verifying Key..."
    StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
    local success, message = verifyKey(key)
    if success then
    StatusLabel.Text = message
    StatusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    wait(2)
    if _G.ScriptsBinsAuth_VerificationStatus and _G.ScriptsBinsAuth_VerificationStatus.valid then
        ScreenGui:Destroy()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/0xx0x00x0xz0x0x0x022/xxxxxxx/refs/heads/main/MPvP"))()
        VerifyButton.Text = "Verify Key"
    else
        StatusLabel.Text = "Verification Failed (Internal Error)."
        StatusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
        wait(2)
        VerifyButton.Text = "Verify Key"
    end
    else
        StatusLabel.Text = message
        StatusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
        wait(2)
        VerifyButton.Text = "Verify Key"
    end
end)
