--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
]=]

-- Instances: 204 | Scripts: 19 | Modules: 0 | Tags: 0
local G2L = {};

-- StarterGui.MenuPVP
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["Name"] = [[MenuPVP]];
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
G2L["1"]["ResetOnSpawn"] = false;


-- StarterGui.MenuPVP.Minimizado
G2L["2"] = Instance.new("ImageButton", G2L["1"]);
-- [ERROR] cannot convert HoverImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["2"]["BorderSizePixel"] = 0;
G2L["2"]["Visible"] = false;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2"]["ZIndex"] = 9;
G2L["2"]["Image"] = [[rbxassetid://134761139059108]];
G2L["2"]["Size"] = UDim2.new(0, 50, 0, 50);
G2L["2"]["HoverImage"] = [[rbxassetid://134761139059108]];
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Name"] = [[Minimizado]];
G2L["2"]["Position"] = UDim2.new(0, 154, 0, 180);


-- StarterGui.MenuPVP.Minimizado.UICorner
G2L["3"] = Instance.new("UICorner", G2L["2"]);
G2L["3"]["CornerRadius"] = UDim.new(1, 0);


-- StarterGui.MenuPVP.Minimizado.UIGradient
G2L["4"] = Instance.new("UIGradient", G2L["2"]);
G2L["4"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(137, 39, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(25, 25, 25))};


-- StarterGui.MenuPVP.Loading
G2L["5"] = Instance.new("Frame", G2L["1"]);
G2L["5"]["Active"] = true;
G2L["5"]["ZIndex"] = 99999;
G2L["5"]["BorderSizePixel"] = 0;
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["5"]["Size"] = UDim2.new(0, 1150, 0, 605);
G2L["5"]["Position"] = UDim2.new(0.49544, 0, 0.46284, 0);
G2L["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["Name"] = [[Loading]];


-- StarterGui.MenuPVP.Loading.LoadingScript
G2L["6"] = Instance.new("LocalScript", G2L["5"]);
G2L["6"]["Name"] = [[LoadingScript]];


-- StarterGui.MenuPVP.Loading.LocalScript
G2L["7"] = Instance.new("LocalScript", G2L["5"]);



-- StarterGui.MenuPVP.Loading.LocalScript
G2L["8"] = Instance.new("LocalScript", G2L["5"]);



-- StarterGui.MenuPVP.Loading.UICorner
G2L["9"] = Instance.new("UICorner", G2L["5"]);
G2L["9"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.MenuPVP.Loading.PvP
G2L["a"] = Instance.new("TextLabel", G2L["5"]);
G2L["a"]["TextWrapped"] = true;
G2L["a"]["ZIndex"] = 9999999;
G2L["a"]["BorderSizePixel"] = 0;
G2L["a"]["TextSize"] = 24;
G2L["a"]["TextScaled"] = true;
G2L["a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a"]["BackgroundTransparency"] = 1;
G2L["a"]["RichText"] = true;
G2L["a"]["Size"] = UDim2.new(0, 156, 0, 125);
G2L["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a"]["Text"] = [[PvP]];
G2L["a"]["Name"] = [[PvP]];
G2L["a"]["Position"] = UDim2.new(0.43707, 0, 0.11186, 0);


-- StarterGui.MenuPVP.Loading.Menu
G2L["b"] = Instance.new("TextLabel", G2L["5"]);
G2L["b"]["TextWrapped"] = true;
G2L["b"]["ZIndex"] = 9999999;
G2L["b"]["BorderSizePixel"] = 0;
G2L["b"]["TextSize"] = 24;
G2L["b"]["TextScaled"] = true;
G2L["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b"]["BackgroundTransparency"] = 1;
G2L["b"]["RichText"] = true;
G2L["b"]["Size"] = UDim2.new(0, 266, 0, 125);
G2L["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b"]["Text"] = [[Menu]];
G2L["b"]["Name"] = [[Menu]];
G2L["b"]["Position"] = UDim2.new(0.38416, 0, 0.19406, 0);


-- StarterGui.MenuPVP.Loading.Carregando...
G2L["c"] = Instance.new("TextLabel", G2L["5"]);
G2L["c"]["TextWrapped"] = true;
G2L["c"]["ZIndex"] = 9999999;
G2L["c"]["BorderSizePixel"] = 0;
G2L["c"]["TextSize"] = 24;
G2L["c"]["TextScaled"] = true;
G2L["c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c"]["BackgroundTransparency"] = 1;
G2L["c"]["RichText"] = true;
G2L["c"]["Size"] = UDim2.new(0, 266, 0, 54);
G2L["c"]["Visible"] = false;
G2L["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c"]["Text"] = [[Carregando...]];
G2L["c"]["Name"] = [[Carregando...]];
G2L["c"]["Position"] = UDim2.new(0.35739, 0, 0.63285, 0);


-- StarterGui.MenuPVP.Loading.LoadingIcon
G2L["d"] = Instance.new("ImageLabel", G2L["5"]);
G2L["d"]["Active"] = true;
G2L["d"]["ZIndex"] = 99999;
G2L["d"]["BorderSizePixel"] = 0;
G2L["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["d"]["Image"] = [[rbxassetid://17119858971]];
G2L["d"]["Size"] = UDim2.new(0, 37, 0, 36);
G2L["d"]["Visible"] = false;
G2L["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d"]["BackgroundTransparency"] = 1;
G2L["d"]["Name"] = [[LoadingIcon]];
G2L["d"]["Position"] = UDim2.new(0.65243, 0, 0.65457, 0);


-- StarterGui.MenuPVP.Loading.Finished
G2L["e"] = Instance.new("ImageLabel", G2L["5"]);
G2L["e"]["Active"] = true;
G2L["e"]["ZIndex"] = 99999;
G2L["e"]["BorderSizePixel"] = 0;
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["e"]["Image"] = [[rbxassetid://5578470911]];
G2L["e"]["Size"] = UDim2.new(0, 56, 0, 56);
G2L["e"]["Visible"] = false;
G2L["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["BackgroundTransparency"] = 1;
G2L["e"]["Name"] = [[Finished]];
G2L["e"]["Position"] = UDim2.new(0.64645, 0, 0.63438, 0);


-- StarterGui.MenuPVP.Loading.Bypass
G2L["f"] = Instance.new("ImageLabel", G2L["5"]);
G2L["f"]["Active"] = true;
G2L["f"]["ZIndex"] = 999999;
G2L["f"]["BorderSizePixel"] = 0;
G2L["f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["f"]["Image"] = [[rbxassetid://71309430456016]];
G2L["f"]["Size"] = UDim2.new(0, 78, 0, 76);
G2L["f"]["Visible"] = false;
G2L["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f"]["BackgroundTransparency"] = 1;
G2L["f"]["Name"] = [[Bypass]];
G2L["f"]["Position"] = UDim2.new(0.64807, 0, 0.62067, 0);


-- StarterGui.MenuPVP.Loading.Carregado!
G2L["10"] = Instance.new("TextLabel", G2L["5"]);
G2L["10"]["TextWrapped"] = true;
G2L["10"]["ZIndex"] = 9999999;
G2L["10"]["BorderSizePixel"] = 0;
G2L["10"]["TextSize"] = 24;
G2L["10"]["TextScaled"] = true;
G2L["10"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["10"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10"]["BackgroundTransparency"] = 1;
G2L["10"]["RichText"] = true;
G2L["10"]["Size"] = UDim2.new(0, 266, 0, 54);
G2L["10"]["Visible"] = false;
G2L["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10"]["Text"] = [[Carregado!]];
G2L["10"]["Name"] = [[Carregado!]];
G2L["10"]["Position"] = UDim2.new(0.35739, 0, 0.63199, 0);


-- StarterGui.MenuPVP.Loading.Aplicado!
G2L["11"] = Instance.new("TextLabel", G2L["5"]);
G2L["11"]["TextWrapped"] = true;
G2L["11"]["ZIndex"] = 9999999;
G2L["11"]["BorderSizePixel"] = 0;
G2L["11"]["TextSize"] = 24;
G2L["11"]["TextScaled"] = true;
G2L["11"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["11"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["BackgroundTransparency"] = 1;
G2L["11"]["RichText"] = true;
G2L["11"]["Size"] = UDim2.new(0, 266, 0, 54);
G2L["11"]["Visible"] = false;
G2L["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11"]["Text"] = [[Aplicado!]];
G2L["11"]["Name"] = [[Aplicado!]];
G2L["11"]["Position"] = UDim2.new(0.34928, 0, 0.63199, 0);


-- StarterGui.MenuPVP.Loading.ImageLabel
G2L["12"] = Instance.new("ImageLabel", G2L["5"]);
G2L["12"]["BorderSizePixel"] = 0;
G2L["12"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["12"]["ImageTransparency"] = 0.76;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["12"]["Image"] = [[rbxassetid://14027126999]];
G2L["12"]["Size"] = UDim2.new(0.99249, 0, 1.00283, 0);
G2L["12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12"]["BackgroundTransparency"] = 1;
G2L["12"]["Position"] = UDim2.new(0.00621, 0, -0.00324, 0);


-- StarterGui.MenuPVP.Loading.ImageLabel
G2L["13"] = Instance.new("ImageLabel", G2L["5"]);
G2L["13"]["BorderSizePixel"] = 0;
G2L["13"]["ScaleType"] = Enum.ScaleType.Crop;
G2L["13"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13"]["ImageTransparency"] = 0.76;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["13"]["Image"] = [[rbxassetid://11369810822]];
G2L["13"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["13"]["BackgroundTransparency"] = 1;
G2L["13"]["Position"] = UDim2.new(0.00217, 0, -0.00455, 0);


-- StarterGui.MenuPVP.Loading.UIToolsGradient
G2L["14"] = Instance.new("UIGradient", G2L["5"]);
G2L["14"]["Name"] = [[UIToolsGradient]];
G2L["14"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(83, 20, 87)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(32, 29, 25))};


-- StarterGui.MenuPVP.Loading.Aplicando Bypass...
G2L["15"] = Instance.new("TextLabel", G2L["5"]);
G2L["15"]["TextWrapped"] = true;
G2L["15"]["ZIndex"] = 9999999;
G2L["15"]["BorderSizePixel"] = 0;
G2L["15"]["TextSize"] = 24;
G2L["15"]["TextScaled"] = true;
G2L["15"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["15"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["15"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["15"]["BackgroundTransparency"] = 1;
G2L["15"]["RichText"] = true;
G2L["15"]["Size"] = UDim2.new(0, 385, 0, 79);
G2L["15"]["Visible"] = false;
G2L["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["15"]["Text"] = [[Aplicando Bypass...]];
G2L["15"]["Name"] = [[Aplicando Bypass...]];
G2L["15"]["Position"] = UDim2.new(0.2463, 0, 0.62231, 0);


-- StarterGui.MenuPVP.Menu
G2L["16"] = Instance.new("Frame", G2L["1"]);
G2L["16"]["Active"] = true;
G2L["16"]["ZIndex"] = 9;
G2L["16"]["BorderSizePixel"] = 0;
G2L["16"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["16"]["Size"] = UDim2.new(0, 874, 0, 549);
G2L["16"]["Position"] = UDim2.new(0.5, 0, 0.45, 0);
G2L["16"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16"]["Name"] = [[Menu]];


-- StarterGui.MenuPVP.Menu.LocalScript
G2L["17"] = Instance.new("LocalScript", G2L["16"]);



-- StarterGui.MenuPVP.Menu.LocalScript
G2L["18"] = Instance.new("LocalScript", G2L["16"]);



-- StarterGui.MenuPVP.Menu.UICorner
G2L["19"] = Instance.new("UICorner", G2L["16"]);
G2L["19"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.MenuPVP.Menu.Linhas
G2L["1a"] = Instance.new("Folder", G2L["16"]);
G2L["1a"]["Name"] = [[Linhas]];


-- StarterGui.MenuPVP.Menu.Linhas.Linha3
G2L["1b"] = Instance.new("Frame", G2L["1a"]);
G2L["1b"]["Active"] = true;
G2L["1b"]["ZIndex"] = 999999999;
G2L["1b"]["BorderSizePixel"] = 0;
G2L["1b"]["BackgroundColor3"] = Color3.fromRGB(59, 13, 44);
G2L["1b"]["Size"] = UDim2.new(0, 883, 0, 1);
G2L["1b"]["Position"] = UDim2.new(-0.01259, 0, 0.08561, 0);
G2L["1b"]["BorderColor3"] = Color3.fromRGB(24, 34, 36);
G2L["1b"]["Name"] = [[Linha3]];


-- StarterGui.MenuPVP.Menu.Linhas.Linha4
G2L["1c"] = Instance.new("Frame", G2L["1a"]);
G2L["1c"]["Active"] = true;
G2L["1c"]["ZIndex"] = 99;
G2L["1c"]["BorderSizePixel"] = 0;
G2L["1c"]["BackgroundColor3"] = Color3.fromRGB(59, 13, 44);
G2L["1c"]["Size"] = UDim2.new(0, 1, 0, 368);
G2L["1c"]["Position"] = UDim2.new(0.60755, 0, 0.32969, 0);
G2L["1c"]["BorderColor3"] = Color3.fromRGB(24, 34, 36);
G2L["1c"]["Name"] = [[Linha4]];


-- StarterGui.MenuPVP.Menu.Linhas.Linha2
G2L["1d"] = Instance.new("Frame", G2L["1a"]);
G2L["1d"]["Active"] = true;
G2L["1d"]["ZIndex"] = 99;
G2L["1d"]["BorderSizePixel"] = 0;
G2L["1d"]["BackgroundColor3"] = Color3.fromRGB(59, 13, 44);
G2L["1d"]["Size"] = UDim2.new(0, 681, 0, 2);
G2L["1d"]["Position"] = UDim2.new(0.219, 0, 0.993, 0);
G2L["1d"]["BorderColor3"] = Color3.fromRGB(24, 34, 36);
G2L["1d"]["Name"] = [[Linha2]];


-- StarterGui.MenuPVP.Menu.Linhas.Linha2
G2L["1e"] = Instance.new("Frame", G2L["1a"]);
G2L["1e"]["Active"] = true;
G2L["1e"]["ZIndex"] = 99;
G2L["1e"]["BorderSizePixel"] = 0;
G2L["1e"]["BackgroundColor3"] = Color3.fromRGB(59, 13, 44);
G2L["1e"]["Size"] = UDim2.new(0, 681, 0, 1);
G2L["1e"]["Position"] = UDim2.new(0.218, 0, 0.644, 0);
G2L["1e"]["BorderColor3"] = Color3.fromRGB(24, 34, 36);
G2L["1e"]["Name"] = [[Linha2]];


-- StarterGui.MenuPVP.Menu.Linhas.Linha4
G2L["1f"] = Instance.new("Frame", G2L["1a"]);
G2L["1f"]["Active"] = true;
G2L["1f"]["ZIndex"] = 999999999;
G2L["1f"]["BorderSizePixel"] = 0;
G2L["1f"]["BackgroundColor3"] = Color3.fromRGB(59, 13, 44);
G2L["1f"]["Size"] = UDim2.new(0, -1, 0, 546);
G2L["1f"]["Position"] = UDim2.new(0.21854, 0, 0.00546, 0);
G2L["1f"]["BorderColor3"] = Color3.fromRGB(24, 34, 36);
G2L["1f"]["Name"] = [[Linha4]];


-- StarterGui.MenuPVP.Menu.Linhas.Linha2
G2L["20"] = Instance.new("Frame", G2L["1a"]);
G2L["20"]["Active"] = true;
G2L["20"]["ZIndex"] = 99;
G2L["20"]["BorderSizePixel"] = 0;
G2L["20"]["BackgroundColor3"] = Color3.fromRGB(59, 13, 44);
G2L["20"]["Size"] = UDim2.new(0, 682, 0, 1);
G2L["20"]["Position"] = UDim2.new(0.21881, 0, 0.32968, 0);
G2L["20"]["BorderColor3"] = Color3.fromRGB(59, 13, 44);
G2L["20"]["Name"] = [[Linha2]];


-- StarterGui.MenuPVP.Menu.Elementos
G2L["21"] = Instance.new("Folder", G2L["16"]);
G2L["21"]["Name"] = [[Elementos]];


-- StarterGui.MenuPVP.Menu.Elementos.ImagemJogador
G2L["22"] = Instance.new("ImageLabel", G2L["21"]);
G2L["22"]["Active"] = true;
G2L["22"]["ZIndex"] = 5;
G2L["22"]["BorderSizePixel"] = 0;
G2L["22"]["BackgroundColor3"] = Color3.fromRGB(37, 83, 87);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["22"]["Image"] = [[rbxasset://textures/ui/GuiImagePlaceholder.png]];
G2L["22"]["Size"] = UDim2.new(0, 45, 0, 45);
G2L["22"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["22"]["BackgroundTransparency"] = 0.95;
G2L["22"]["Name"] = [[ImagemJogador]];
G2L["22"]["Position"] = UDim2.new(-0.00002, 0, 0.90368, 0);


-- StarterGui.MenuPVP.Menu.Elementos.ImagemJogador.LocalScript
G2L["23"] = Instance.new("LocalScript", G2L["22"]);



-- StarterGui.MenuPVP.Menu.Elementos.ImagemJogador.UIStroke
G2L["24"] = Instance.new("UIStroke", G2L["22"]);
G2L["24"]["Thickness"] = 0.6;
G2L["24"]["Color"] = Color3.fromRGB(132, 31, 150);


-- StarterGui.MenuPVP.Menu.Elementos.ImagemJogador.UICorner
G2L["25"] = Instance.new("UICorner", G2L["22"]);



-- StarterGui.MenuPVP.Menu.Elementos.Minimize
G2L["26"] = Instance.new("ImageButton", G2L["21"]);
G2L["26"]["BorderSizePixel"] = 0;
G2L["26"]["BackgroundColor3"] = Color3.fromRGB(209, 192, 5);
G2L["26"]["ZIndex"] = 9;
G2L["26"]["Size"] = UDim2.new(0, 13, 0, 13);
G2L["26"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["26"]["Name"] = [[Minimize]];
G2L["26"]["Position"] = UDim2.new(0.9703, 0, 0.02543, 0);


-- StarterGui.MenuPVP.Menu.Elementos.Minimize.UICorner
G2L["27"] = Instance.new("UICorner", G2L["26"]);
G2L["27"]["CornerRadius"] = UDim.new(1, 0);


-- StarterGui.MenuPVP.Menu.Elementos.ImageLabel
G2L["28"] = Instance.new("ImageLabel", G2L["21"]);
G2L["28"]["ZIndex"] = 2;
G2L["28"]["BorderSizePixel"] = 0;
G2L["28"]["ScaleType"] = Enum.ScaleType.Crop;
G2L["28"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["28"]["ImageTransparency"] = 0.94;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["28"]["Image"] = [[rbxassetid://75564206432063]];
G2L["28"]["Size"] = UDim2.new(0, 884, 0, 546);
G2L["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["28"]["BackgroundTransparency"] = 1;
G2L["28"]["Position"] = UDim2.new(-0.00458, 0, 0.00364, 0);


-- StarterGui.MenuPVP.Menu.Elementos.ImageLabel
G2L["29"] = Instance.new("ImageLabel", G2L["21"]);
G2L["29"]["ZIndex"] = 999999999;
G2L["29"]["BorderSizePixel"] = 0;
G2L["29"]["ScaleType"] = Enum.ScaleType.Crop;
G2L["29"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["29"]["ImageTransparency"] = 0.96;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["29"]["Image"] = [[rbxassetid://137156744246701]];
G2L["29"]["Size"] = UDim2.new(0, 210, 0, 501);
G2L["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["29"]["BackgroundTransparency"] = 1;
G2L["29"]["Position"] = UDim2.new(-0.01831, 0, 0.12204, 0);


-- StarterGui.MenuPVP.Menu.Elementos.fundo
G2L["2a"] = Instance.new("ImageLabel", G2L["21"]);
G2L["2a"]["ZIndex"] = 99999;
G2L["2a"]["BorderSizePixel"] = 0;
G2L["2a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2a"]["ImageTransparency"] = 0.79;
G2L["2a"]["Size"] = UDim2.new(0, 683, 0, 134);
G2L["2a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2a"]["Name"] = [[fundo]];
G2L["2a"]["Position"] = UDim2.new(0.21854, 0, 0.08561, 0);


-- StarterGui.MenuPVP.Menu.Elementos.fundo.ImageLabel
G2L["2b"] = Instance.new("ImageLabel", G2L["2a"]);
G2L["2b"]["ZIndex"] = 999;
G2L["2b"]["BorderSizePixel"] = 0;
G2L["2b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["2b"]["Image"] = [[rbxassetid://122107949583500]];
G2L["2b"]["Size"] = UDim2.new(0, 170, 0, 89);
G2L["2b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2b"]["BackgroundTransparency"] = 1;
G2L["2b"]["Position"] = UDim2.new(0.07321, 0, 0.18627, 0);


-- StarterGui.MenuPVP.Menu.Elementos.fundo.ImageLabel.UICorner
G2L["2c"] = Instance.new("UICorner", G2L["2b"]);



-- StarterGui.MenuPVP.Menu.Elementos.fundo.ImageLabel.UIStroke
G2L["2d"] = Instance.new("UIStroke", G2L["2b"]);
G2L["2d"]["Thickness"] = 0.9;
G2L["2d"]["Color"] = Color3.fromRGB(117, 25, 88);


-- StarterGui.MenuPVP.Menu.Elementos.fundo.UIGradient
G2L["2e"] = Instance.new("UIGradient", G2L["2a"]);
G2L["2e"]["Rotation"] = -90;
G2L["2e"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(45, 7, 16)),ColorSequenceKeypoint.new(0.032, Color3.fromRGB(59, 18, 45)),ColorSequenceKeypoint.new(0.308, Color3.fromRGB(7, 3, 6)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};


-- StarterGui.MenuPVP.Menu.Elementos.MaxLogo
G2L["2f"] = Instance.new("ImageLabel", G2L["21"]);
G2L["2f"]["Interactable"] = false;
G2L["2f"]["ZIndex"] = 999999999;
G2L["2f"]["BorderSizePixel"] = 0;
G2L["2f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["2f"]["Image"] = [[rbxassetid://91930895734838]];
G2L["2f"]["Size"] = UDim2.new(0, 85, 0, 80);
G2L["2f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2f"]["BackgroundTransparency"] = 1;
G2L["2f"]["Name"] = [[MaxLogo]];
G2L["2f"]["Position"] = UDim2.new(-0.02887, 0, -0.03293, 0);


-- StarterGui.MenuPVP.Menu.Elementos.CriadorOutline
G2L["30"] = Instance.new("Frame", G2L["21"]);
G2L["30"]["ZIndex"] = 999999999;
G2L["30"]["BorderSizePixel"] = 0;
G2L["30"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["30"]["Size"] = UDim2.new(0, 49, 0, 17);
G2L["30"]["Position"] = UDim2.new(0.61327, 0, 0.22401, 0);
G2L["30"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["30"]["Name"] = [[CriadorOutline]];
G2L["30"]["BackgroundTransparency"] = 1;


-- StarterGui.MenuPVP.Menu.Elementos.CriadorOutline.UIStroke
G2L["31"] = Instance.new("UIStroke", G2L["30"]);
G2L["31"]["Thickness"] = 0.6;
G2L["31"]["Color"] = Color3.fromRGB(59, 13, 44);


-- StarterGui.MenuPVP.Menu.Elementos.CriadorOutline.UICorner
G2L["32"] = Instance.new("UICorner", G2L["30"]);
G2L["32"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.MenuPVP.Menu.Elementos.JogandoOutline
G2L["33"] = Instance.new("Frame", G2L["21"]);
G2L["33"]["ZIndex"] = 9999999;
G2L["33"]["BorderSizePixel"] = 0;
G2L["33"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["33"]["Size"] = UDim2.new(0, 83, 0, 26);
G2L["33"]["Position"] = UDim2.new(0.85355, 0, 0.12929, 0);
G2L["33"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["33"]["Name"] = [[JogandoOutline]];
G2L["33"]["BackgroundTransparency"] = 1;


-- StarterGui.MenuPVP.Menu.Elementos.JogandoOutline.UIStroke
G2L["34"] = Instance.new("UIStroke", G2L["33"]);
G2L["34"]["Thickness"] = 1.5;
G2L["34"]["Color"] = Color3.fromRGB(90, 19, 68);


-- StarterGui.MenuPVP.Menu.Elementos.JogandoOutline.UICorner
G2L["35"] = Instance.new("UICorner", G2L["33"]);
G2L["35"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.MenuPVP.Menu.Elementos.JogandoOutline.ImageLabel
G2L["36"] = Instance.new("ImageLabel", G2L["33"]);
G2L["36"]["BorderSizePixel"] = 0;
G2L["36"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["36"]["Image"] = [[rbxassetid://12796191869]];
G2L["36"]["Size"] = UDim2.new(0, 15, 0, 14);
G2L["36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["36"]["BackgroundTransparency"] = 1;
G2L["36"]["Position"] = UDim2.new(0.09639, 0, 0.23077, 0);


-- StarterGui.MenuPVP.Menu.Elementos.Voltar
G2L["37"] = Instance.new("ImageLabel", G2L["21"]);
G2L["37"]["ZIndex"] = 3;
G2L["37"]["BorderSizePixel"] = 0;
G2L["37"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["37"]["ImageTransparency"] = 0.45;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["37"]["Image"] = [[rbxassetid://11771856687]];
G2L["37"]["Size"] = UDim2.new(0, 16, 0, 16);
G2L["37"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["37"]["BackgroundTransparency"] = 1;
G2L["37"]["Name"] = [[Voltar]];
G2L["37"]["Position"] = UDim2.new(0.24142, 0, 0.027, 0);


-- StarterGui.MenuPVP.Menu.Elementos.Carro
G2L["38"] = Instance.new("ImageLabel", G2L["21"]);
G2L["38"]["ZIndex"] = 9999999;
G2L["38"]["BorderSizePixel"] = 2;
G2L["38"]["ScaleType"] = Enum.ScaleType.Fit;
G2L["38"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["38"]["ResampleMode"] = Enum.ResamplerMode.Pixelated;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["38"]["Image"] = [[rbxassetid://139072019431057]];
G2L["38"]["Size"] = UDim2.new(0, 310, 0, 100);
G2L["38"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["38"]["BackgroundTransparency"] = 1;
G2L["38"]["Name"] = [[Carro]];
G2L["38"]["Position"] = UDim2.new(0.68225, 0, 0.20765, 0);


-- StarterGui.MenuPVP.Menu.Elementos.FundoBarra3
G2L["39"] = Instance.new("Frame", G2L["21"]);
G2L["39"]["BorderSizePixel"] = 0;
G2L["39"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["39"]["Size"] = UDim2.new(0, 714, 0, 54);
G2L["39"]["Position"] = UDim2.new(0.18192, 0, 0.33151, 0);
G2L["39"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["39"]["Name"] = [[FundoBarra3]];


-- StarterGui.MenuPVP.Menu.Elementos.FundoBarra3.UICorner
G2L["3a"] = Instance.new("UICorner", G2L["39"]);



-- StarterGui.MenuPVP.Menu.Elementos.PlayerIcon
G2L["3b"] = Instance.new("ImageLabel", G2L["21"]);
G2L["3b"]["ZIndex"] = 2;
G2L["3b"]["BorderSizePixel"] = 2;
G2L["3b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["3b"]["Image"] = [[rbxassetid://117259180607823]];
G2L["3b"]["Size"] = UDim2.new(0, 30, 0, 30);
G2L["3b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3b"]["BackgroundTransparency"] = 1;
G2L["3b"]["Name"] = [[PlayerIcon]];
G2L["3b"]["Position"] = UDim2.new(0.24142, 0, 0.35337, 0);


-- StarterGui.MenuPVP.Menu.Elementos.EspIcon
G2L["3c"] = Instance.new("ImageLabel", G2L["21"]);
G2L["3c"]["ZIndex"] = 2;
G2L["3c"]["BorderSizePixel"] = 2;
G2L["3c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["3c"]["Image"] = [[rbxassetid://17412298151]];
G2L["3c"]["Size"] = UDim2.new(0, 30, 0, 30);
G2L["3c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3c"]["BackgroundTransparency"] = 1;
G2L["3c"]["Name"] = [[EspIcon]];
G2L["3c"]["Position"] = UDim2.new(0.63272, 0, 0.35337, 0);


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction1
G2L["3d"] = Instance.new("Frame", G2L["21"]);
G2L["3d"]["BorderSizePixel"] = 0;
G2L["3d"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d"]["Size"] = UDim2.new(0, 326, 0, 48);
G2L["3d"]["Position"] = UDim2.new(0.22594, 0, 0.44809, 0);
G2L["3d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d"]["Name"] = [[FundoFunction1]];


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction1.UIStroke
G2L["3e"] = Instance.new("UIStroke", G2L["3d"]);
G2L["3e"]["Thickness"] = 0.6;
G2L["3e"]["Color"] = Color3.fromRGB(195, 12, 140);


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction2
G2L["3f"] = Instance.new("Frame", G2L["21"]);
G2L["3f"]["BorderSizePixel"] = 0;
G2L["3f"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3f"]["Size"] = UDim2.new(0, 326, 0, 48);
G2L["3f"]["Position"] = UDim2.new(0.225, 0, 0.55, 0);
G2L["3f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3f"]["Name"] = [[FundoFunction2]];


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction2.UIStroke
G2L["40"] = Instance.new("UIStroke", G2L["3f"]);
G2L["40"]["Thickness"] = 0.6;
G2L["40"]["Color"] = Color3.fromRGB(195, 12, 140);


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction3
G2L["41"] = Instance.new("Frame", G2L["21"]);
G2L["41"]["BorderSizePixel"] = 0;
G2L["41"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["41"]["Size"] = UDim2.new(0, 326, 0, 48);
G2L["41"]["Position"] = UDim2.new(0.225, 0, 0.65911, 0);
G2L["41"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["41"]["Name"] = [[FundoFunction3]];


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction3.UIStroke
G2L["42"] = Instance.new("UIStroke", G2L["41"]);
G2L["42"]["Thickness"] = 0.6;
G2L["42"]["Color"] = Color3.fromRGB(195, 12, 140);


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction4
G2L["43"] = Instance.new("Frame", G2L["21"]);
G2L["43"]["BorderSizePixel"] = 0;
G2L["43"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["43"]["Size"] = UDim2.new(0, 326, 0, 48);
G2L["43"]["Position"] = UDim2.new(0.225, 0, 0.77004, 0);
G2L["43"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["43"]["Name"] = [[FundoFunction4]];


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction4.UIStroke
G2L["44"] = Instance.new("UIStroke", G2L["43"]);
G2L["44"]["Thickness"] = 0.6;
G2L["44"]["Color"] = Color3.fromRGB(195, 12, 140);


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction1
G2L["45"] = Instance.new("Frame", G2L["21"]);
G2L["45"]["BorderSizePixel"] = 0;
G2L["45"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["45"]["Size"] = UDim2.new(0, 326, 0, 48);
G2L["45"]["Position"] = UDim2.new(0.61643, 0, 0.44636, 0);
G2L["45"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["45"]["Name"] = [[FundoFunction1]];


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction1.UIStroke
G2L["46"] = Instance.new("UIStroke", G2L["45"]);
G2L["46"]["Thickness"] = 0.6;
G2L["46"]["Color"] = Color3.fromRGB(195, 12, 140);


-- StarterGui.MenuPVP.Menu.Elementos.Vip
G2L["47"] = Instance.new("Frame", G2L["21"]);
G2L["47"]["ZIndex"] = 7777;
G2L["47"]["BorderSizePixel"] = 0;
G2L["47"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["47"]["Size"] = UDim2.new(0, 39, 0, 15);
G2L["47"]["Position"] = UDim2.new(0.16, 0, 0.927, 0);
G2L["47"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["47"]["Name"] = [[Vip]];


-- StarterGui.MenuPVP.Menu.Elementos.Vip.UICorner
G2L["48"] = Instance.new("UICorner", G2L["47"]);
G2L["48"]["CornerRadius"] = UDim.new(0, 3);


-- StarterGui.MenuPVP.Menu.Elementos.Vip.UIGradient
G2L["49"] = Instance.new("UIGradient", G2L["47"]);
G2L["49"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(123, 0, 0)),ColorSequenceKeypoint.new(0.514, Color3.fromRGB(51, 15, 53)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};


-- StarterGui.MenuPVP.Menu.Elementos.Flecha1
G2L["4a"] = Instance.new("ImageLabel", G2L["21"]);
G2L["4a"]["ZIndex"] = 3;
G2L["4a"]["BorderSizePixel"] = 0;
G2L["4a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4a"]["ImageTransparency"] = 0.45;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["4a"]["Image"] = [[rbxassetid://11771856687]];
G2L["4a"]["Size"] = UDim2.new(0, 10, 0, 10);
G2L["4a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4a"]["BackgroundTransparency"] = 1;
G2L["4a"]["Rotation"] = -90;
G2L["4a"]["Name"] = [[Flecha1]];
G2L["4a"]["Position"] = UDim2.new(0.58124, 0, 0.37491, 0);


-- StarterGui.MenuPVP.Menu.Elementos.Flecha2
G2L["4b"] = Instance.new("ImageLabel", G2L["21"]);
G2L["4b"]["ZIndex"] = 3;
G2L["4b"]["BorderSizePixel"] = 0;
G2L["4b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4b"]["ImageTransparency"] = 0.45;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["4b"]["Image"] = [[rbxassetid://11771856687]];
G2L["4b"]["Size"] = UDim2.new(0, 10, 0, 10);
G2L["4b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4b"]["BackgroundTransparency"] = 1;
G2L["4b"]["Rotation"] = -90;
G2L["4b"]["Name"] = [[Flecha2]];
G2L["4b"]["Position"] = UDim2.new(0.962, 0, 0.375, 0);


-- StarterGui.MenuPVP.Menu.Elementos.FundoBarra
G2L["4c"] = Instance.new("Frame", G2L["21"]);
G2L["4c"]["ZIndex"] = 3;
G2L["4c"]["BorderSizePixel"] = 0;
G2L["4c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4c"]["Size"] = UDim2.new(0, 201, 0, 549);
G2L["4c"]["Position"] = UDim2.new(-0.01259, 0, 0, 0);
G2L["4c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4c"]["Name"] = [[FundoBarra]];


-- StarterGui.MenuPVP.Menu.Elementos.FundoBarra.UICorner
G2L["4d"] = Instance.new("UICorner", G2L["4c"]);
G2L["4d"]["CornerRadius"] = UDim.new(0.06, 0);


-- StarterGui.MenuPVP.Menu.Elementos.FundoBarra.UIGradient
G2L["4e"] = Instance.new("UIGradient", G2L["4c"]);
G2L["4e"]["Rotation"] = -85;
G2L["4e"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(59, 13, 44)),ColorSequenceKeypoint.new(0.431, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(0.725, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction2
G2L["4f"] = Instance.new("Frame", G2L["21"]);
G2L["4f"]["BorderSizePixel"] = 0;
G2L["4f"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4f"]["Size"] = UDim2.new(0, 326, 0, 48);
G2L["4f"]["Position"] = UDim2.new(0.6163, 0, 0.87969, 0);
G2L["4f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4f"]["Name"] = [[FundoFunction2]];


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction2.UIStroke
G2L["50"] = Instance.new("UIStroke", G2L["4f"]);
G2L["50"]["Thickness"] = 0.6;
G2L["50"]["Color"] = Color3.fromRGB(195, 12, 140);


-- StarterGui.MenuPVP.Menu.Elementos.FundoBarra2
G2L["51"] = Instance.new("Frame", G2L["21"]);
G2L["51"]["ZIndex"] = 99;
G2L["51"]["BorderSizePixel"] = 0;
G2L["51"]["BackgroundColor3"] = Color3.fromRGB(13, 23, 27);
G2L["51"]["Size"] = UDim2.new(0, 181, 0, 43);
G2L["51"]["Position"] = UDim2.new(0.00343, 0, 0.13843, 0);
G2L["51"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["51"]["Name"] = [[FundoBarra2]];


-- StarterGui.MenuPVP.Menu.Elementos.FundoBarra2.UIStroke
G2L["52"] = Instance.new("UIStroke", G2L["51"]);
G2L["52"]["Thickness"] = 0.6;
G2L["52"]["Color"] = Color3.fromRGB(59, 13, 44);


-- StarterGui.MenuPVP.Menu.Elementos.FundoBarra2.UICorner
G2L["53"] = Instance.new("UICorner", G2L["51"]);
G2L["53"]["CornerRadius"] = UDim.new(0.1, 0);


-- StarterGui.MenuPVP.Menu.Elementos.FundoBarra2.UIGradient
G2L["54"] = Instance.new("UIGradient", G2L["51"]);
G2L["54"]["Rotation"] = -85;
G2L["54"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(59, 13, 44)),ColorSequenceKeypoint.new(0.431, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(0.725, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};


-- StarterGui.MenuPVP.Menu.Elementos.PlayerIcon
G2L["55"] = Instance.new("ImageLabel", G2L["21"]);
G2L["55"]["ZIndex"] = 999;
G2L["55"]["BorderSizePixel"] = 2;
G2L["55"]["ScaleType"] = Enum.ScaleType.Fit;
G2L["55"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["55"]["Image"] = [[rbxassetid://14219650242]];
G2L["55"]["Size"] = UDim2.new(0, 41, 0, 37);
G2L["55"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["55"]["BackgroundTransparency"] = 1;
G2L["55"]["Name"] = [[PlayerIcon]];
G2L["55"]["Position"] = UDim2.new(0.01259, 0, 0.1439, 0);


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction4
G2L["56"] = Instance.new("Frame", G2L["21"]);
G2L["56"]["BorderSizePixel"] = 0;
G2L["56"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["56"]["Size"] = UDim2.new(0, 326, 0, 48);
G2L["56"]["Position"] = UDim2.new(0.225, 0, 0.87933, 0);
G2L["56"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["56"]["Name"] = [[FundoFunction4]];


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction4.UIStroke
G2L["57"] = Instance.new("UIStroke", G2L["56"]);
G2L["57"]["Thickness"] = 0.6;
G2L["57"]["Color"] = Color3.fromRGB(195, 12, 140);


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction2
G2L["58"] = Instance.new("Frame", G2L["21"]);
G2L["58"]["BorderSizePixel"] = 0;
G2L["58"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["58"]["Size"] = UDim2.new(0, 326, 0, 48);
G2L["58"]["Position"] = UDim2.new(0.6163, 0, 0.55, 0);
G2L["58"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["58"]["Name"] = [[FundoFunction2]];


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction2.UIStroke
G2L["59"] = Instance.new("UIStroke", G2L["58"]);
G2L["59"]["Thickness"] = 0.6;
G2L["59"]["Color"] = Color3.fromRGB(195, 12, 140);


-- StarterGui.MenuPVP.Menu.Elementos.FundoBarra2
G2L["5a"] = Instance.new("Frame", G2L["21"]);
G2L["5a"]["ZIndex"] = 99;
G2L["5a"]["BorderSizePixel"] = 0;
G2L["5a"]["BackgroundColor3"] = Color3.fromRGB(215, 215, 215);
G2L["5a"]["Size"] = UDim2.new(0, -3, 0, 43);
G2L["5a"]["Position"] = UDim2.new(0, -1, 0.14, 0);
G2L["5a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5a"]["Name"] = [[FundoBarra2]];


-- StarterGui.MenuPVP.Menu.Elementos.FundoBarra2.UICorner
G2L["5b"] = Instance.new("UICorner", G2L["5a"]);
G2L["5b"]["CornerRadius"] = UDim.new(0.1, 0);


-- StarterGui.MenuPVP.Menu.Elementos.FundoBarra2.UIGradient
G2L["5c"] = Instance.new("UIGradient", G2L["5a"]);
G2L["5c"]["Rotation"] = -90;
G2L["5c"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(185, 39, 139)),ColorSequenceKeypoint.new(0.551, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction2
G2L["5d"] = Instance.new("Frame", G2L["21"]);
G2L["5d"]["BorderSizePixel"] = 0;
G2L["5d"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5d"]["Size"] = UDim2.new(0, 326, 0, 48);
G2L["5d"]["Position"] = UDim2.new(0.6163, 0, 0.76858, 0);
G2L["5d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5d"]["Name"] = [[FundoFunction2]];


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction2.UIStroke
G2L["5e"] = Instance.new("UIStroke", G2L["5d"]);
G2L["5e"]["Thickness"] = 0.6;
G2L["5e"]["Color"] = Color3.fromRGB(195, 12, 140);


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction3
G2L["5f"] = Instance.new("Frame", G2L["21"]);
G2L["5f"]["BorderSizePixel"] = 0;
G2L["5f"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5f"]["Size"] = UDim2.new(0, 326, 0, 48);
G2L["5f"]["Position"] = UDim2.new(0.61643, 0, 0.65911, 0);
G2L["5f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5f"]["Name"] = [[FundoFunction3]];


-- StarterGui.MenuPVP.Menu.Elementos.FundoFunction3.UIStroke
G2L["60"] = Instance.new("UIStroke", G2L["5f"]);
G2L["60"]["Thickness"] = 0.6;
G2L["60"]["Color"] = Color3.fromRGB(195, 12, 140);


-- StarterGui.MenuPVP.Menu.Funcoes
G2L["61"] = Instance.new("Folder", G2L["16"]);
G2L["61"]["Name"] = [[Funcoes]];


-- StarterGui.MenuPVP.Menu.Funcoes.AimToggle
G2L["62"] = Instance.new("ImageButton", G2L["61"]);
G2L["62"]["BorderSizePixel"] = 0;
G2L["62"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["62"]["ZIndex"] = 99;
G2L["62"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["62"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["62"]["Name"] = [[AimToggle]];
G2L["62"]["Position"] = UDim2.new(0.559, 0, 0.46818, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.AimToggle.LocalScript
G2L["63"] = Instance.new("LocalScript", G2L["62"]);



-- StarterGui.MenuPVP.Menu.Funcoes.AimToggle.ClickSound
G2L["64"] = Instance.new("Sound", G2L["62"]);
G2L["64"]["Name"] = [[ClickSound]];
G2L["64"]["SoundId"] = [[rbxassetid://8623387557]];


-- StarterGui.MenuPVP.Menu.Funcoes.AimToggle.UICorner
G2L["65"] = Instance.new("UICorner", G2L["62"]);
G2L["65"]["CornerRadius"] = UDim.new(0, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.AimToggle.UIStroke
G2L["66"] = Instance.new("UIStroke", G2L["62"]);
G2L["66"]["Thickness"] = 0.6;
G2L["66"]["Color"] = Color3.fromRGB(34, 36, 41);


-- StarterGui.MenuPVP.Menu.Funcoes.AimToggle.ImagemAtivado
G2L["67"] = Instance.new("ImageLabel", G2L["62"]);
G2L["67"]["Active"] = true;
G2L["67"]["BorderSizePixel"] = 0;
G2L["67"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["67"]["Image"] = [[rbxassetid://6031094667]];
G2L["67"]["Size"] = UDim2.new(0, 17, 0, 15);
G2L["67"]["Visible"] = false;
G2L["67"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["67"]["BackgroundTransparency"] = 1;
G2L["67"]["Name"] = [[ImagemAtivado]];
G2L["67"]["Position"] = UDim2.new(0, 4, 0.2175, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.AimToggle.ImagemAtivado.UICorner
G2L["68"] = Instance.new("UICorner", G2L["67"]);
G2L["68"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.ExibirFovToggle
G2L["69"] = Instance.new("ImageButton", G2L["61"]);
G2L["69"]["BorderSizePixel"] = 0;
G2L["69"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["69"]["ZIndex"] = 99;
G2L["69"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["69"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["69"]["Name"] = [[ExibirFovToggle]];
G2L["69"]["Position"] = UDim2.new(0.558, 0, 0.67911, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.ExibirFovToggle.LocalScript
G2L["6a"] = Instance.new("LocalScript", G2L["69"]);



-- StarterGui.MenuPVP.Menu.Funcoes.ExibirFovToggle.ClickSound
G2L["6b"] = Instance.new("Sound", G2L["69"]);
G2L["6b"]["Name"] = [[ClickSound]];
G2L["6b"]["SoundId"] = [[rbxassetid://8623387557]];


-- StarterGui.MenuPVP.Menu.Funcoes.ExibirFovToggle.UICorner
G2L["6c"] = Instance.new("UICorner", G2L["69"]);
G2L["6c"]["CornerRadius"] = UDim.new(0, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.ExibirFovToggle.UIStroke
G2L["6d"] = Instance.new("UIStroke", G2L["69"]);
G2L["6d"]["Thickness"] = 0.6;
G2L["6d"]["Color"] = Color3.fromRGB(34, 36, 41);


-- StarterGui.MenuPVP.Menu.Funcoes.ExibirFovToggle.ImagemAtivado
G2L["6e"] = Instance.new("ImageLabel", G2L["69"]);
G2L["6e"]["Active"] = true;
G2L["6e"]["BorderSizePixel"] = 0;
G2L["6e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["6e"]["Image"] = [[rbxassetid://6031094667]];
G2L["6e"]["Size"] = UDim2.new(0, 17, 0, 15);
G2L["6e"]["Visible"] = false;
G2L["6e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6e"]["BackgroundTransparency"] = 1;
G2L["6e"]["Name"] = [[ImagemAtivado]];
G2L["6e"]["Position"] = UDim2.new(0, 4, 0.2175, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.ExibirFovToggle.ImagemAtivado.UICorner
G2L["6f"] = Instance.new("UICorner", G2L["6e"]);
G2L["6f"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.AumentarFov
G2L["70"] = Instance.new("ImageButton", G2L["61"]);
G2L["70"]["BorderSizePixel"] = 0;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["70"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
G2L["70"]["Image"] = [[rbxassetid://12072054746]];
G2L["70"]["Size"] = UDim2.new(0, 20, 0, 20);
G2L["70"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["70"]["Name"] = [[AumentarFov]];
G2L["70"]["Position"] = UDim2.new(0.55915, 0, 0.79796, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.AumentarFov.ClickSound
G2L["71"] = Instance.new("Sound", G2L["70"]);
G2L["71"]["Name"] = [[ClickSound]];
G2L["71"]["SoundId"] = [[rbxassetid://8623387557]];


-- StarterGui.MenuPVP.Menu.Funcoes.AumentarFov.LocalScript
G2L["72"] = Instance.new("LocalScript", G2L["70"]);



-- StarterGui.MenuPVP.Menu.Funcoes.AumentarFov.UICorner
G2L["73"] = Instance.new("UICorner", G2L["70"]);
G2L["73"]["CornerRadius"] = UDim.new(0, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.DiminuirFov
G2L["74"] = Instance.new("ImageButton", G2L["61"]);
G2L["74"]["BorderSizePixel"] = 0;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["74"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
G2L["74"]["Image"] = [[rbxassetid://11687527482]];
G2L["74"]["Size"] = UDim2.new(0, 20, 0, 20);
G2L["74"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["74"]["Name"] = [[DiminuirFov]];
G2L["74"]["Position"] = UDim2.new(0.51058, 0, 0.79796, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.DiminuirFov.ClickSound
G2L["75"] = Instance.new("Sound", G2L["74"]);
G2L["75"]["Name"] = [[ClickSound]];
G2L["75"]["SoundId"] = [[rbxassetid://8623387557]];


-- StarterGui.MenuPVP.Menu.Funcoes.DiminuirFov.LocalScript
G2L["76"] = Instance.new("LocalScript", G2L["74"]);



-- StarterGui.MenuPVP.Menu.Funcoes.DiminuirFov.UICorner
G2L["77"] = Instance.new("UICorner", G2L["74"]);
G2L["77"]["CornerRadius"] = UDim.new(0, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.EspPlayersToggle
G2L["78"] = Instance.new("ImageButton", G2L["61"]);
G2L["78"]["BorderSizePixel"] = 0;
G2L["78"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["78"]["ZIndex"] = 99;
G2L["78"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["78"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["78"]["Name"] = [[EspPlayersToggle]];
G2L["78"]["Position"] = UDim2.new(0.94835, 0, 0.5698, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.EspPlayersToggle.LocalScript
G2L["79"] = Instance.new("LocalScript", G2L["78"]);



-- StarterGui.MenuPVP.Menu.Funcoes.EspPlayersToggle.ClickSound
G2L["7a"] = Instance.new("Sound", G2L["78"]);
G2L["7a"]["Name"] = [[ClickSound]];
G2L["7a"]["SoundId"] = [[rbxassetid://8623387557]];


-- StarterGui.MenuPVP.Menu.Funcoes.EspPlayersToggle.UICorner
G2L["7b"] = Instance.new("UICorner", G2L["78"]);
G2L["7b"]["CornerRadius"] = UDim.new(0, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.EspPlayersToggle.UIStroke
G2L["7c"] = Instance.new("UIStroke", G2L["78"]);
G2L["7c"]["Thickness"] = 0.6;
G2L["7c"]["Color"] = Color3.fromRGB(34, 36, 41);


-- StarterGui.MenuPVP.Menu.Funcoes.EspPlayersToggle.ImagemAtivado
G2L["7d"] = Instance.new("ImageLabel", G2L["78"]);
G2L["7d"]["Active"] = true;
G2L["7d"]["BorderSizePixel"] = 0;
G2L["7d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["7d"]["Image"] = [[rbxassetid://6031094667]];
G2L["7d"]["Size"] = UDim2.new(0, 17, 0, 15);
G2L["7d"]["Visible"] = false;
G2L["7d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7d"]["BackgroundTransparency"] = 1;
G2L["7d"]["Name"] = [[ImagemAtivado]];
G2L["7d"]["Position"] = UDim2.new(0, 4, 0.2175, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.EspPlayersToggle.ImagemAtivado.UICorner
G2L["7e"] = Instance.new("UICorner", G2L["7d"]);
G2L["7e"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.EspSkeletonToggle
G2L["7f"] = Instance.new("ImageButton", G2L["61"]);
G2L["7f"]["BorderSizePixel"] = 0;
G2L["7f"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["7f"]["ZIndex"] = 99;
G2L["7f"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["7f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7f"]["Name"] = [[EspSkeletonToggle]];
G2L["7f"]["Position"] = UDim2.new(0.94843, 0, 0.46636, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.EspSkeletonToggle.LocalScript
G2L["80"] = Instance.new("LocalScript", G2L["7f"]);



-- StarterGui.MenuPVP.Menu.Funcoes.EspSkeletonToggle.ClickSound
G2L["81"] = Instance.new("Sound", G2L["7f"]);
G2L["81"]["Name"] = [[ClickSound]];
G2L["81"]["SoundId"] = [[rbxassetid://8623387557]];


-- StarterGui.MenuPVP.Menu.Funcoes.EspSkeletonToggle.UICorner
G2L["82"] = Instance.new("UICorner", G2L["7f"]);
G2L["82"]["CornerRadius"] = UDim.new(0, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.EspSkeletonToggle.UIStroke
G2L["83"] = Instance.new("UIStroke", G2L["7f"]);
G2L["83"]["Thickness"] = 0.6;
G2L["83"]["Color"] = Color3.fromRGB(34, 36, 41);


-- StarterGui.MenuPVP.Menu.Funcoes.EspSkeletonToggle.ImagemAtivado
G2L["84"] = Instance.new("ImageLabel", G2L["7f"]);
G2L["84"]["Active"] = true;
G2L["84"]["BorderSizePixel"] = 0;
G2L["84"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["84"]["Image"] = [[rbxassetid://6031094667]];
G2L["84"]["Size"] = UDim2.new(0, 17, 0, 15);
G2L["84"]["Visible"] = false;
G2L["84"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["84"]["BackgroundTransparency"] = 1;
G2L["84"]["Name"] = [[ImagemAtivado]];
G2L["84"]["Position"] = UDim2.new(0, 4, 0.2175, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.EspSkeletonToggle.ImagemAtivado.UICorner
G2L["85"] = Instance.new("UICorner", G2L["84"]);
G2L["85"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.CabecaGrandeToggle
G2L["86"] = Instance.new("ImageButton", G2L["61"]);
G2L["86"]["BorderSizePixel"] = 0;
G2L["86"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["86"]["ZIndex"] = 99;
G2L["86"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["86"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["86"]["Name"] = [[CabecaGrandeToggle]];
G2L["86"]["Position"] = UDim2.new(0.94843, 0, 0.79013, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.CabecaGrandeToggle.LocalScript
G2L["87"] = Instance.new("LocalScript", G2L["86"]);



-- StarterGui.MenuPVP.Menu.Funcoes.CabecaGrandeToggle.ClickSound
G2L["88"] = Instance.new("Sound", G2L["86"]);
G2L["88"]["Name"] = [[ClickSound]];
G2L["88"]["SoundId"] = [[rbxassetid://8623387557]];


-- StarterGui.MenuPVP.Menu.Funcoes.CabecaGrandeToggle.UICorner
G2L["89"] = Instance.new("UICorner", G2L["86"]);
G2L["89"]["CornerRadius"] = UDim.new(0, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.CabecaGrandeToggle.UIStroke
G2L["8a"] = Instance.new("UIStroke", G2L["86"]);
G2L["8a"]["Thickness"] = 0.6;
G2L["8a"]["Color"] = Color3.fromRGB(34, 36, 41);


-- StarterGui.MenuPVP.Menu.Funcoes.CabecaGrandeToggle.ImagemAtivado
G2L["8b"] = Instance.new("ImageLabel", G2L["86"]);
G2L["8b"]["Active"] = true;
G2L["8b"]["BorderSizePixel"] = 0;
G2L["8b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["8b"]["Image"] = [[rbxassetid://6031094667]];
G2L["8b"]["Size"] = UDim2.new(0, 17, 0, 15);
G2L["8b"]["Visible"] = false;
G2L["8b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8b"]["BackgroundTransparency"] = 1;
G2L["8b"]["Name"] = [[ImagemAtivado]];
G2L["8b"]["Position"] = UDim2.new(0, 4, 0.2175, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.CabecaGrandeToggle.ImagemAtivado.UICorner
G2L["8c"] = Instance.new("UICorner", G2L["8b"]);
G2L["8c"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.NomeJogador
G2L["8d"] = Instance.new("TextLabel", G2L["61"]);
G2L["8d"]["TextWrapped"] = true;
G2L["8d"]["Active"] = true;
G2L["8d"]["ZIndex"] = 88;
G2L["8d"]["BorderSizePixel"] = 0;
G2L["8d"]["TextSize"] = 15;
G2L["8d"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["8d"]["TextScaled"] = true;
G2L["8d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8d"]["FontFace"] = Font.new([[rbxasset://fonts/families/Jura.json]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
G2L["8d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8d"]["BackgroundTransparency"] = 1;
G2L["8d"]["RichText"] = true;
G2L["8d"]["Size"] = UDim2.new(0, 84, 0, 17);
G2L["8d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8d"]["Name"] = [[NomeJogador]];
G2L["8d"]["Position"] = UDim2.new(0.06, 0, 0.926, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.NomeJogador.LocalScript
G2L["8e"] = Instance.new("LocalScript", G2L["8d"]);



-- StarterGui.MenuPVP.Menu.Funcoes.MunicaoInfinitaToggle
G2L["8f"] = Instance.new("ImageButton", G2L["61"]);
G2L["8f"]["BorderSizePixel"] = 0;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["8f"]["BackgroundColor3"] = Color3.fromRGB(45, 45, 45);
G2L["8f"]["Image"] = [[rbxassetid://16081386298]];
G2L["8f"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["8f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8f"]["Name"] = [[MunicaoInfinitaToggle]];
G2L["8f"]["Position"] = UDim2.new(0.55686, 0, 0.89942, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.MunicaoInfinitaToggle.LocalScript
G2L["90"] = Instance.new("LocalScript", G2L["8f"]);



-- StarterGui.MenuPVP.Menu.Funcoes.MunicaoInfinitaToggle.ClickSound
G2L["91"] = Instance.new("Sound", G2L["8f"]);
G2L["91"]["Name"] = [[ClickSound]];
G2L["91"]["SoundId"] = [[rbxassetid://8623387557]];


-- StarterGui.MenuPVP.Menu.Funcoes.MunicaoInfinitaToggle.UICorner
G2L["92"] = Instance.new("UICorner", G2L["8f"]);
G2L["92"]["CornerRadius"] = UDim.new(0, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.MunicaoInfinitaToggle.ImagemAtivado
G2L["93"] = Instance.new("ImageLabel", G2L["8f"]);
G2L["93"]["Active"] = true;
G2L["93"]["BorderSizePixel"] = 0;
G2L["93"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["93"]["Image"] = [[rbxassetid://6031094667]];
G2L["93"]["Size"] = UDim2.new(0, 17, 0, 15);
G2L["93"]["Visible"] = false;
G2L["93"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["93"]["BackgroundTransparency"] = 1;
G2L["93"]["Name"] = [[ImagemAtivado]];
G2L["93"]["Position"] = UDim2.new(0, 4, 0.2175, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.MunicaoInfinitaToggle.ImagemAtivado.UICorner
G2L["94"] = Instance.new("UICorner", G2L["93"]);
G2L["94"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.MunicaoInfinitaToggle.UIStroke
G2L["95"] = Instance.new("UIStroke", G2L["8f"]);
G2L["95"]["Thickness"] = 0.6;
G2L["95"]["Color"] = Color3.fromRGB(34, 36, 41);


-- StarterGui.MenuPVP.Menu.Funcoes.WallCheckToggle
G2L["96"] = Instance.new("ImageButton", G2L["61"]);
G2L["96"]["BorderSizePixel"] = 0;
G2L["96"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["96"]["ZIndex"] = 99;
G2L["96"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["96"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["96"]["Name"] = [[WallCheckToggle]];
G2L["96"]["Position"] = UDim2.new(0.558, 0, 0.57, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.WallCheckToggle.LocalScript
G2L["97"] = Instance.new("LocalScript", G2L["96"]);



-- StarterGui.MenuPVP.Menu.Funcoes.WallCheckToggle.ClickSound
G2L["98"] = Instance.new("Sound", G2L["96"]);
G2L["98"]["Name"] = [[ClickSound]];
G2L["98"]["SoundId"] = [[rbxassetid://8623387557]];


-- StarterGui.MenuPVP.Menu.Funcoes.WallCheckToggle.UICorner
G2L["99"] = Instance.new("UICorner", G2L["96"]);
G2L["99"]["CornerRadius"] = UDim.new(0, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.WallCheckToggle.UIStroke
G2L["9a"] = Instance.new("UIStroke", G2L["96"]);
G2L["9a"]["Thickness"] = 0.6;
G2L["9a"]["Color"] = Color3.fromRGB(34, 36, 41);


-- StarterGui.MenuPVP.Menu.Funcoes.WallCheckToggle.ImagemAtivado
G2L["9b"] = Instance.new("ImageLabel", G2L["96"]);
G2L["9b"]["Active"] = true;
G2L["9b"]["BorderSizePixel"] = 0;
G2L["9b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["9b"]["Image"] = [[rbxassetid://6031094667]];
G2L["9b"]["Size"] = UDim2.new(0, 17, 0, 15);
G2L["9b"]["Visible"] = false;
G2L["9b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9b"]["BackgroundTransparency"] = 1;
G2L["9b"]["Name"] = [[ImagemAtivado]];
G2L["9b"]["Position"] = UDim2.new(0, 4, 0.2175, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.WallCheckToggle.ImagemAtivado.UICorner
G2L["9c"] = Instance.new("UICorner", G2L["9b"]);
G2L["9c"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.TroncoGrandeToggle
G2L["9d"] = Instance.new("ImageButton", G2L["61"]);
G2L["9d"]["BorderSizePixel"] = 0;
G2L["9d"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["9d"]["ZIndex"] = 99;
G2L["9d"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["9d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9d"]["Name"] = [[TroncoGrandeToggle]];
G2L["9d"]["Position"] = UDim2.new(0.94843, 0, 0.89942, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.TroncoGrandeToggle.LocalScript
G2L["9e"] = Instance.new("LocalScript", G2L["9d"]);



-- StarterGui.MenuPVP.Menu.Funcoes.TroncoGrandeToggle.ClickSound
G2L["9f"] = Instance.new("Sound", G2L["9d"]);
G2L["9f"]["Name"] = [[ClickSound]];
G2L["9f"]["SoundId"] = [[rbxassetid://8623387557]];


-- StarterGui.MenuPVP.Menu.Funcoes.TroncoGrandeToggle.UICorner
G2L["a0"] = Instance.new("UICorner", G2L["9d"]);
G2L["a0"]["CornerRadius"] = UDim.new(0, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.TroncoGrandeToggle.UIStroke
G2L["a1"] = Instance.new("UIStroke", G2L["9d"]);
G2L["a1"]["Thickness"] = 0.6;
G2L["a1"]["Color"] = Color3.fromRGB(34, 36, 41);


-- StarterGui.MenuPVP.Menu.Funcoes.TroncoGrandeToggle.ImagemAtivado
G2L["a2"] = Instance.new("ImageLabel", G2L["9d"]);
G2L["a2"]["Active"] = true;
G2L["a2"]["BorderSizePixel"] = 0;
G2L["a2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["a2"]["Image"] = [[rbxassetid://6031094667]];
G2L["a2"]["Size"] = UDim2.new(0, 17, 0, 15);
G2L["a2"]["Visible"] = false;
G2L["a2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a2"]["BackgroundTransparency"] = 1;
G2L["a2"]["Name"] = [[ImagemAtivado]];
G2L["a2"]["Position"] = UDim2.new(0, 4, 0.2175, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.TroncoGrandeToggle.ImagemAtivado.UICorner
G2L["a3"] = Instance.new("UICorner", G2L["a2"]);
G2L["a3"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.EspBoxToggle
G2L["a4"] = Instance.new("ImageButton", G2L["61"]);
G2L["a4"]["BorderSizePixel"] = 0;
G2L["a4"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["a4"]["ZIndex"] = 99;
G2L["a4"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["a4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a4"]["Name"] = [[EspBoxToggle]];
G2L["a4"]["Position"] = UDim2.new(0.94843, 0, 0.67911, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.EspBoxToggle.LocalScript
G2L["a5"] = Instance.new("LocalScript", G2L["a4"]);



-- StarterGui.MenuPVP.Menu.Funcoes.EspBoxToggle.ClickSound
G2L["a6"] = Instance.new("Sound", G2L["a4"]);
G2L["a6"]["Name"] = [[ClickSound]];
G2L["a6"]["SoundId"] = [[rbxassetid://8623387557]];


-- StarterGui.MenuPVP.Menu.Funcoes.EspBoxToggle.UICorner
G2L["a7"] = Instance.new("UICorner", G2L["a4"]);
G2L["a7"]["CornerRadius"] = UDim.new(0, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.EspBoxToggle.UIStroke
G2L["a8"] = Instance.new("UIStroke", G2L["a4"]);
G2L["a8"]["Thickness"] = 0.6;
G2L["a8"]["Color"] = Color3.fromRGB(34, 36, 41);


-- StarterGui.MenuPVP.Menu.Funcoes.EspBoxToggle.ImagemAtivado
G2L["a9"] = Instance.new("ImageLabel", G2L["a4"]);
G2L["a9"]["Active"] = true;
G2L["a9"]["BorderSizePixel"] = 0;
G2L["a9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["a9"]["Image"] = [[rbxassetid://6031094667]];
G2L["a9"]["Size"] = UDim2.new(0, 17, 0, 15);
G2L["a9"]["Visible"] = false;
G2L["a9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a9"]["BackgroundTransparency"] = 1;
G2L["a9"]["Name"] = [[ImagemAtivado]];
G2L["a9"]["Position"] = UDim2.new(0, 4, 0.2175, 0);


-- StarterGui.MenuPVP.Menu.Funcoes.EspBoxToggle.ImagemAtivado.UICorner
G2L["aa"] = Instance.new("UICorner", G2L["a9"]);
G2L["aa"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.MenuPVP.Menu.Textos
G2L["ab"] = Instance.new("Folder", G2L["16"]);
G2L["ab"]["Name"] = [[Textos]];


-- StarterGui.MenuPVP.Menu.Textos.Ilha Bela Roleplay
G2L["ac"] = Instance.new("TextLabel", G2L["ab"]);
G2L["ac"]["ZIndex"] = 9999999;
G2L["ac"]["BorderSizePixel"] = 0;
G2L["ac"]["TextSize"] = 24;
G2L["ac"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ac"]["FontFace"] = Font.new([[rbxasset://fonts/families/Zekton.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["ac"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ac"]["BackgroundTransparency"] = 1;
G2L["ac"]["Size"] = UDim2.new(0, 204, 0, 50);
G2L["ac"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ac"]["Text"] = [[Ilha Bela Roleplay]];
G2L["ac"]["Name"] = [[Ilha Bela Roleplay]];
G2L["ac"]["Position"] = UDim2.new(0.47025, 0, 0.12022, 0);


-- StarterGui.MenuPVP.Menu.Textos.GTGamerXT079
G2L["ad"] = Instance.new("TextLabel", G2L["ab"]);
G2L["ad"]["ZIndex"] = 9999999;
G2L["ad"]["BorderSizePixel"] = 0;
G2L["ad"]["TextSize"] = 15;
G2L["ad"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ad"]["FontFace"] = Font.new([[rbxasset://fonts/families/Zekton.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["ad"]["TextColor3"] = Color3.fromRGB(153, 33, 115);
G2L["ad"]["BackgroundTransparency"] = 1;
G2L["ad"]["Size"] = UDim2.new(0, 107, 0, 50);
G2L["ad"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ad"]["Text"] = [[GTGamerXT079]];
G2L["ad"]["Name"] = [[GTGamerXT079]];
G2L["ad"]["Position"] = UDim2.new(0.49085, 0, 0.19308, 0);


-- StarterGui.MenuPVP.Menu.Textos.Criador
G2L["ae"] = Instance.new("TextLabel", G2L["ab"]);
G2L["ae"]["ZIndex"] = 9999999;
G2L["ae"]["BorderSizePixel"] = 0;
G2L["ae"]["TextSize"] = 9;
G2L["ae"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ae"]["FontFace"] = Font.new([[rbxasset://fonts/families/Zekton.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["ae"]["TextColor3"] = Color3.fromRGB(159, 34, 119);
G2L["ae"]["BackgroundTransparency"] = 1;
G2L["ae"]["Size"] = UDim2.new(0, 73, 0, 50);
G2L["ae"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ae"]["Text"] = [[Criador]];
G2L["ae"]["Name"] = [[Criador]];
G2L["ae"]["Position"] = UDim2.new(0.59954, 0, 0.19308, 0);


-- StarterGui.MenuPVP.Menu.Textos.Jogando
G2L["af"] = Instance.new("TextLabel", G2L["ab"]);
G2L["af"]["ZIndex"] = 9999999;
G2L["af"]["BorderSizePixel"] = 0;
G2L["af"]["TextSize"] = 11;
G2L["af"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["af"]["FontFace"] = Font.new([[rbxasset://fonts/families/Zekton.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["af"]["TextColor3"] = Color3.fromRGB(171, 36, 128);
G2L["af"]["BackgroundTransparency"] = 1;
G2L["af"]["Size"] = UDim2.new(0, 49, 0, 15);
G2L["af"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["af"]["Text"] = [[Jogando]];
G2L["af"]["Name"] = [[Jogando]];
G2L["af"]["Position"] = UDim2.new(0.87986, 0, 0.14, 0);


-- StarterGui.MenuPVP.Menu.Textos.Combate
G2L["b0"] = Instance.new("TextLabel", G2L["ab"]);
G2L["b0"]["ZIndex"] = 3;
G2L["b0"]["BorderSizePixel"] = 0;
G2L["b0"]["TextSize"] = 18;
G2L["b0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b0"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["b0"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b0"]["BackgroundTransparency"] = 1;
G2L["b0"]["Size"] = UDim2.new(0, 129, 0, 33);
G2L["b0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b0"]["Text"] = [[Combate]];
G2L["b0"]["Name"] = [[Combate]];
G2L["b0"]["Position"] = UDim2.new(0.25548, 0, 0.34973, 0);


-- StarterGui.MenuPVP.Menu.Textos.Esp
G2L["b1"] = Instance.new("TextLabel", G2L["ab"]);
G2L["b1"]["ZIndex"] = 3;
G2L["b1"]["BorderSizePixel"] = 0;
G2L["b1"]["TextSize"] = 18;
G2L["b1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b1"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["b1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b1"]["BackgroundTransparency"] = 1;
G2L["b1"]["Size"] = UDim2.new(0, 81, 0, 33);
G2L["b1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b1"]["Text"] = [[Esp]];
G2L["b1"]["Name"] = [[Esp]];
G2L["b1"]["Position"] = UDim2.new(0.64678, 0, 0.34973, 0);


-- StarterGui.MenuPVP.Menu.Textos.Wall Check
G2L["b2"] = Instance.new("TextLabel", G2L["ab"]);
G2L["b2"]["ZIndex"] = 3;
G2L["b2"]["BorderSizePixel"] = 0;
G2L["b2"]["TextSize"] = 18;
G2L["b2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b2"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b2"]["BackgroundTransparency"] = 1;
G2L["b2"]["Size"] = UDim2.new(0, 102, 0, 33);
G2L["b2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b2"]["Text"] = [[Wall Check]];
G2L["b2"]["Name"] = [[Wall Check]];
G2L["b2"]["Position"] = UDim2.new(0.231, 0, 0.55, 0);


-- StarterGui.MenuPVP.Menu.Textos.Wall Check.Verifica se está atras de paredes
G2L["b3"] = Instance.new("TextLabel", G2L["b2"]);
G2L["b3"]["ZIndex"] = 3;
G2L["b3"]["BorderSizePixel"] = 0;
G2L["b3"]["TextSize"] = 12;
G2L["b3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b3"]["FontFace"] = Font.new([[rbxasset://fonts/families/Oswald.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["b3"]["TextColor3"] = Color3.fromRGB(126, 126, 126);
G2L["b3"]["BackgroundTransparency"] = 1;
G2L["b3"]["Size"] = UDim2.new(0, 119, 0, 33);
G2L["b3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b3"]["Text"] = [[Verifica se está atras de paredes]];
G2L["b3"]["Name"] = [[Verifica se está atras de paredes]];
G2L["b3"]["Position"] = UDim2.new(0.09389, 0, 0.43964, 0);


-- StarterGui.MenuPVP.Menu.Textos.Exibir Fov
G2L["b4"] = Instance.new("TextLabel", G2L["ab"]);
G2L["b4"]["ZIndex"] = 3;
G2L["b4"]["BorderSizePixel"] = 0;
G2L["b4"]["TextSize"] = 18;
G2L["b4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b4"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b4"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b4"]["BackgroundTransparency"] = 1;
G2L["b4"]["Size"] = UDim2.new(0, 95, 0, 33);
G2L["b4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b4"]["Text"] = [[Exibir Fov]];
G2L["b4"]["Name"] = [[Exibir Fov]];
G2L["b4"]["Position"] = UDim2.new(0.231, 0, 0.65911, 0);


-- StarterGui.MenuPVP.Menu.Textos.Exibir Fov.Mostra o FOV
G2L["b5"] = Instance.new("TextLabel", G2L["b4"]);
G2L["b5"]["ZIndex"] = 3;
G2L["b5"]["BorderSizePixel"] = 0;
G2L["b5"]["TextSize"] = 12;
G2L["b5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b5"]["FontFace"] = Font.new([[rbxasset://fonts/families/Oswald.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["b5"]["TextColor3"] = Color3.fromRGB(126, 126, 126);
G2L["b5"]["BackgroundTransparency"] = 1;
G2L["b5"]["Size"] = UDim2.new(0, 95, 0, 33);
G2L["b5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b5"]["Text"] = [[Mostra o FOV]];
G2L["b5"]["Name"] = [[Mostra o FOV]];
G2L["b5"]["Position"] = UDim2.new(0.08408, 0, 0.46995, 0);


-- StarterGui.MenuPVP.Menu.Textos.Tamanho FOV
G2L["b6"] = Instance.new("TextLabel", G2L["ab"]);
G2L["b6"]["ZIndex"] = 3;
G2L["b6"]["BorderSizePixel"] = 0;
G2L["b6"]["TextSize"] = 18;
G2L["b6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b6"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b6"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b6"]["BackgroundTransparency"] = 1;
G2L["b6"]["Size"] = UDim2.new(0, 114, 0, 33);
G2L["b6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b6"]["Text"] = [[Tamanho FOV]];
G2L["b6"]["Name"] = [[Tamanho FOV]];
G2L["b6"]["Position"] = UDim2.new(0.23901, 0, 0.77004, 0);


-- StarterGui.MenuPVP.Menu.Textos.Tamanho FOV.Altera o tamanho do FOV
G2L["b7"] = Instance.new("TextLabel", G2L["b6"]);
G2L["b7"]["ZIndex"] = 3;
G2L["b7"]["BorderSizePixel"] = 0;
G2L["b7"]["TextSize"] = 12;
G2L["b7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b7"]["FontFace"] = Font.new([[rbxasset://fonts/families/Oswald.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["b7"]["TextColor3"] = Color3.fromRGB(126, 126, 126);
G2L["b7"]["BackgroundTransparency"] = 1;
G2L["b7"]["Size"] = UDim2.new(0, 95, 0, 33);
G2L["b7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b7"]["Text"] = [[Altera o tamanho do FOV]];
G2L["b7"]["Name"] = [[Altera o tamanho do FOV]];
G2L["b7"]["Position"] = UDim2.new(0.08408, 0, 0.46995, 0);


-- StarterGui.MenuPVP.Menu.Textos.Esp Skeleton
G2L["b8"] = Instance.new("TextLabel", G2L["ab"]);
G2L["b8"]["ZIndex"] = 3;
G2L["b8"]["BorderSizePixel"] = 0;
G2L["b8"]["TextSize"] = 18;
G2L["b8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b8"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b8"]["BackgroundTransparency"] = 1;
G2L["b8"]["Size"] = UDim2.new(0, 95, 0, 33);
G2L["b8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b8"]["Text"] = [[Esp Skeleton]];
G2L["b8"]["Name"] = [[Esp Skeleton]];
G2L["b8"]["Position"] = UDim2.new(0.63375, 0, 0.45, 0);


-- StarterGui.MenuPVP.Menu.Textos.Esp Skeleton.Aplica ESP Esqueleto nos outros
G2L["b9"] = Instance.new("TextLabel", G2L["b8"]);
G2L["b9"]["ZIndex"] = 3;
G2L["b9"]["BorderSizePixel"] = 0;
G2L["b9"]["TextSize"] = 12;
G2L["b9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b9"]["FontFace"] = Font.new([[rbxasset://fonts/families/Oswald.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["b9"]["TextColor3"] = Color3.fromRGB(126, 126, 126);
G2L["b9"]["BackgroundTransparency"] = 1;
G2L["b9"]["Size"] = UDim2.new(0, 95, 0, 33);
G2L["b9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b9"]["Text"] = [[Aplica ESP Esqueleto nos outros]];
G2L["b9"]["Name"] = [[Aplica ESP Esqueleto nos outros]];
G2L["b9"]["Position"] = UDim2.new(0.147, 0, 0.4, 0);


-- StarterGui.MenuPVP.Menu.Textos.Aimbot
G2L["ba"] = Instance.new("TextLabel", G2L["ab"]);
G2L["ba"]["ZIndex"] = 3;
G2L["ba"]["BorderSizePixel"] = 0;
G2L["ba"]["TextSize"] = 18;
G2L["ba"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ba"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["ba"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ba"]["BackgroundTransparency"] = 1;
G2L["ba"]["Size"] = UDim2.new(0, 95, 0, 33);
G2L["ba"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ba"]["Text"] = [[Aimbot]];
G2L["ba"]["Name"] = [[Aimbot]];
G2L["ba"]["Position"] = UDim2.new(0.231, 0, 0.44818, 0);


-- StarterGui.MenuPVP.Menu.Textos.Aimbot.Ativa o Aimbot
G2L["bb"] = Instance.new("TextLabel", G2L["ba"]);
G2L["bb"]["ZIndex"] = 3;
G2L["bb"]["BorderSizePixel"] = 0;
G2L["bb"]["TextSize"] = 12;
G2L["bb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bb"]["FontFace"] = Font.new([[rbxasset://fonts/families/Oswald.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["bb"]["TextColor3"] = Color3.fromRGB(126, 126, 126);
G2L["bb"]["BackgroundTransparency"] = 1;
G2L["bb"]["Size"] = UDim2.new(0, 95, 0, 33);
G2L["bb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bb"]["Text"] = [[Ativa o Aimbot]];
G2L["bb"]["Name"] = [[Ativa o Aimbot]];
G2L["bb"]["Position"] = UDim2.new(0.08408, 0, 0.46995, 0);


-- StarterGui.MenuPVP.Menu.Textos.VIP
G2L["bc"] = Instance.new("TextLabel", G2L["ab"]);
G2L["bc"]["ZIndex"] = 7777;
G2L["bc"]["BorderSizePixel"] = 0;
G2L["bc"]["TextSize"] = 11;
G2L["bc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bc"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["bc"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bc"]["BackgroundTransparency"] = 1;
G2L["bc"]["Size"] = UDim2.new(0, 44, 0, 15);
G2L["bc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bc"]["Text"] = [[VIP]];
G2L["bc"]["Name"] = [[VIP]];
G2L["bc"]["Position"] = UDim2.new(0.15708, 0, 0.92532, 0);


-- StarterGui.MenuPVP.Menu.Textos.Max
G2L["bd"] = Instance.new("TextLabel", G2L["ab"]);
G2L["bd"]["ZIndex"] = 3;
G2L["bd"]["BorderSizePixel"] = 0;
G2L["bd"]["TextSize"] = 18;
G2L["bd"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bd"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["bd"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bd"]["BackgroundTransparency"] = 1;
G2L["bd"]["Size"] = UDim2.new(0, 58, 0, 33);
G2L["bd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bd"]["Text"] = [[Max]];
G2L["bd"]["Name"] = [[Max]];
G2L["bd"]["Position"] = UDim2.new(0.05983, 0, 0.00546, 0);


-- StarterGui.MenuPVP.Menu.Textos.Store
G2L["be"] = Instance.new("TextLabel", G2L["ab"]);
G2L["be"]["ZIndex"] = 3;
G2L["be"]["BorderSizePixel"] = 0;
G2L["be"]["TextSize"] = 18;
G2L["be"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["be"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["be"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["be"]["BackgroundTransparency"] = 1;
G2L["be"]["Size"] = UDim2.new(0, 58, 0, 33);
G2L["be"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["be"]["Text"] = [[Store]];
G2L["be"]["Name"] = [[Store]];
G2L["be"]["Position"] = UDim2.new(0.11475, 0, 0.02732, 0);


-- StarterGui.MenuPVP.Menu.Textos.Hitbox Peito
G2L["bf"] = Instance.new("TextLabel", G2L["ab"]);
G2L["bf"]["ZIndex"] = 3;
G2L["bf"]["BorderSizePixel"] = 0;
G2L["bf"]["TextSize"] = 18;
G2L["bf"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bf"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["bf"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bf"]["BackgroundTransparency"] = 1;
G2L["bf"]["Size"] = UDim2.new(0, 102, 0, 33);
G2L["bf"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bf"]["Text"] = [[Hitbox Peito]];
G2L["bf"]["Name"] = [[Hitbox Peito]];
G2L["bf"]["Position"] = UDim2.new(0.62917, 0, 0.88333, 0);


-- StarterGui.MenuPVP.Menu.Textos.Hitbox Peito.Deixa o Tronco do Inimigo Grande
G2L["c0"] = Instance.new("TextLabel", G2L["bf"]);
G2L["c0"]["ZIndex"] = 3;
G2L["c0"]["BorderSizePixel"] = 0;
G2L["c0"]["TextSize"] = 12;
G2L["c0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c0"]["FontFace"] = Font.new([[rbxasset://fonts/families/Oswald.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["c0"]["TextColor3"] = Color3.fromRGB(126, 126, 126);
G2L["c0"]["BackgroundTransparency"] = 1;
G2L["c0"]["Size"] = UDim2.new(0, 119, 0, 33);
G2L["c0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c0"]["Text"] = [[Deixa o Tronco do Inimigo Grande]];
G2L["c0"]["Name"] = [[Deixa o Tronco do Inimigo Grande]];
G2L["c0"]["Position"] = UDim2.new(0.14291, 0, 0.43964, 0);


-- StarterGui.MenuPVP.Menu.Textos.Home
G2L["c1"] = Instance.new("TextLabel", G2L["ab"]);
G2L["c1"]["ZIndex"] = 999;
G2L["c1"]["BorderSizePixel"] = 0;
G2L["c1"]["TextSize"] = 18;
G2L["c1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c1"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c1"]["BackgroundTransparency"] = 1;
G2L["c1"]["Size"] = UDim2.new(0, 58, 0, 33);
G2L["c1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c1"]["Text"] = [[Home]];
G2L["c1"]["Name"] = [[Home]];
G2L["c1"]["Position"] = UDim2.new(0.0747, 0, 0.14754, 0);


-- StarterGui.MenuPVP.Menu.Textos.Esp Menu
G2L["c2"] = Instance.new("TextLabel", G2L["ab"]);
G2L["c2"]["ZIndex"] = 3;
G2L["c2"]["BorderSizePixel"] = 0;
G2L["c2"]["TextSize"] = 18;
G2L["c2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c2"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c2"]["BackgroundTransparency"] = 1;
G2L["c2"]["Size"] = UDim2.new(0, 102, 0, 33);
G2L["c2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c2"]["Text"] = [[Esp Menu]];
G2L["c2"]["Name"] = [[Esp Menu]];
G2L["c2"]["Position"] = UDim2.new(0.6223, 0, 0.55, 0);


-- StarterGui.MenuPVP.Menu.Textos.Esp Menu.Habilita um Menu em cima dos players
G2L["c3"] = Instance.new("TextLabel", G2L["c2"]);
G2L["c3"]["ZIndex"] = 3;
G2L["c3"]["BorderSizePixel"] = 0;
G2L["c3"]["TextSize"] = 12;
G2L["c3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c3"]["FontFace"] = Font.new([[rbxasset://fonts/families/Oswald.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["c3"]["TextColor3"] = Color3.fromRGB(126, 126, 126);
G2L["c3"]["BackgroundTransparency"] = 1;
G2L["c3"]["Size"] = UDim2.new(0, 119, 0, 33);
G2L["c3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c3"]["Text"] = [[Habilita um Menu em cima dos players]];
G2L["c3"]["Name"] = [[Habilita um Menu em cima dos players]];
G2L["c3"]["Position"] = UDim2.new(0.20173, 0, 0.43964, 0);


-- StarterGui.MenuPVP.Menu.Textos.ValorFOV
G2L["c4"] = Instance.new("TextLabel", G2L["ab"]);
G2L["c4"]["ZIndex"] = 3;
G2L["c4"]["BorderSizePixel"] = 0;
G2L["c4"]["TextSize"] = 12;
G2L["c4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c4"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["c4"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c4"]["BackgroundTransparency"] = 1;
G2L["c4"]["Size"] = UDim2.new(0, 29, 0, 24);
G2L["c4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c4"]["Text"] = [[60]];
G2L["c4"]["Name"] = [[ValorFOV]];
G2L["c4"]["Position"] = UDim2.new(0.46944, 0, 0.79053, 0);


-- StarterGui.MenuPVP.Menu.Textos.Hitbox Cabeça (Invisivel)
G2L["c5"] = Instance.new("TextLabel", G2L["ab"]);
G2L["c5"]["ZIndex"] = 3;
G2L["c5"]["BorderSizePixel"] = 0;
G2L["c5"]["TextSize"] = 18;
G2L["c5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c5"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c5"]["BackgroundTransparency"] = 1;
G2L["c5"]["Size"] = UDim2.new(0, 102, 0, 33);
G2L["c5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c5"]["Text"] = [[Hitbox Cabeça (Invisivel)]];
G2L["c5"]["Name"] = [[Hitbox Cabeça (Invisivel)]];
G2L["c5"]["Position"] = UDim2.new(0.68295, 0, 0.77404, 0);


-- StarterGui.MenuPVP.Menu.Textos.Hitbox Cabeça (Invisivel).Deixa a Cabeça do Inimigo Grande
G2L["c6"] = Instance.new("TextLabel", G2L["c5"]);
G2L["c6"]["ZIndex"] = 3;
G2L["c6"]["BorderSizePixel"] = 0;
G2L["c6"]["TextSize"] = 12;
G2L["c6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c6"]["FontFace"] = Font.new([[rbxasset://fonts/families/Oswald.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["c6"]["TextColor3"] = Color3.fromRGB(126, 126, 126);
G2L["c6"]["BackgroundTransparency"] = 1;
G2L["c6"]["Size"] = UDim2.new(0, 119, 0, 33);
G2L["c6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c6"]["Text"] = [[Deixa a Cabeça do Inimigo Grande]];
G2L["c6"]["Name"] = [[Deixa a Cabeça do Inimigo Grande]];
G2L["c6"]["Position"] = UDim2.new(-0.28847, 0, 0.37904, 0);


-- StarterGui.MenuPVP.Menu.Textos.Munição Infinita
G2L["c7"] = Instance.new("TextLabel", G2L["ab"]);
G2L["c7"]["ZIndex"] = 3;
G2L["c7"]["BorderSizePixel"] = 0;
G2L["c7"]["TextSize"] = 18;
G2L["c7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c7"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c7"]["BackgroundTransparency"] = 1;
G2L["c7"]["Size"] = UDim2.new(0, 114, 0, 33);
G2L["c7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c7"]["Text"] = [[Munição Infinita]];
G2L["c7"]["Name"] = [[Munição Infinita]];
G2L["c7"]["Position"] = UDim2.new(0.23901, 0, 0.87933, 0);


-- StarterGui.MenuPVP.Menu.Textos.Munição Infinita.Sua Munição Nunca Acaba
G2L["c8"] = Instance.new("TextLabel", G2L["c7"]);
G2L["c8"]["ZIndex"] = 3;
G2L["c8"]["BorderSizePixel"] = 0;
G2L["c8"]["TextSize"] = 12;
G2L["c8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c8"]["FontFace"] = Font.new([[rbxasset://fonts/families/Oswald.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["c8"]["TextColor3"] = Color3.fromRGB(126, 126, 126);
G2L["c8"]["BackgroundTransparency"] = 1;
G2L["c8"]["Size"] = UDim2.new(0, 95, 0, 33);
G2L["c8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c8"]["Text"] = [[Sua Munição Nunca Acaba]];
G2L["c8"]["Name"] = [[Sua Munição Nunca Acaba]];
G2L["c8"]["Position"] = UDim2.new(0.08408, 0, 0.46995, 0);


-- StarterGui.MenuPVP.Menu.Textos.Esp Box
G2L["c9"] = Instance.new("TextLabel", G2L["ab"]);
G2L["c9"]["ZIndex"] = 3;
G2L["c9"]["BorderSizePixel"] = 0;
G2L["c9"]["TextSize"] = 18;
G2L["c9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c9"]["FontFace"] = Font.new([[rbxasset://fonts/families/Michroma.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c9"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c9"]["BackgroundTransparency"] = 1;
G2L["c9"]["Size"] = UDim2.new(0, 102, 0, 33);
G2L["c9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c9"]["Text"] = [[Esp Box]];
G2L["c9"]["Name"] = [[Esp Box]];
G2L["c9"]["Position"] = UDim2.new(0.61549, 0, 0.659, 0);


-- StarterGui.MenuPVP.Menu.Textos.Esp Box.Aplica uma Caixa em Volta do Inimigo
G2L["ca"] = Instance.new("TextLabel", G2L["c9"]);
G2L["ca"]["ZIndex"] = 3;
G2L["ca"]["BorderSizePixel"] = 0;
G2L["ca"]["TextSize"] = 12;
G2L["ca"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ca"]["FontFace"] = Font.new([[rbxasset://fonts/families/Oswald.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["ca"]["TextColor3"] = Color3.fromRGB(126, 126, 126);
G2L["ca"]["BackgroundTransparency"] = 1;
G2L["ca"]["Size"] = UDim2.new(0, 119, 0, 33);
G2L["ca"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ca"]["Text"] = [[Aplica uma Caixa em Volta do Inimigo]];
G2L["ca"]["Name"] = [[Aplica uma Caixa em Volta do Inimigo]];
G2L["ca"]["Position"] = UDim2.new(0.25075, 0, 0.46995, 0);


-- StarterGui.MenuPVP.Menu.UIGradient
G2L["cb"] = Instance.new("UIGradient", G2L["16"]);
G2L["cb"]["Rotation"] = 95;
G2L["cb"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(59, 13, 44)),ColorSequenceKeypoint.new(0.678, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(0.725, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};


-- StarterGui.MenuPVP.LocalScript
G2L["cc"] = Instance.new("LocalScript", G2L["1"]);



-- StarterGui.MenuPVP.Loading.LoadingScript
local function C_6()
local script = G2L["6"];
	local RunService = game:GetService("RunService")
	local icon = script.Parent:WaitForChild("LoadingIcon") -- ou o caminho correto
	
	RunService.RenderStepped:Connect(function(dt)
		icon.Rotation = (icon.Rotation + 180 * dt) % 360
	end)
	
end;
task.spawn(C_6);
-- StarterGui.MenuPVP.Loading.LocalScript
local function C_7()
local script = G2L["7"];
	local TweenService = game:GetService("TweenService")
	
	local gui = script.Parent
	
	-- Referências
	local loadingIcon = gui:WaitForChild("LoadingIcon")
	local carregando = gui:WaitForChild("Carregando...")
	local finished = gui:WaitForChild("Finished")
	local carregado = gui:WaitForChild("Carregado!")
	local aplicando = gui:WaitForChild("Aplicando Bypass...")
	local bypass = gui:WaitForChild("Bypass")
	local aplicado = gui:WaitForChild("Aplicado!")
	
	local fadeDuration = 1.5
	
	-- Função de fade com controle de visibilidade
	local function fade(object, targetTransparency, duration)
		if targetTransparency == 0 then
			object.Visible = true
		end
	
		local goal = {}
		if object:IsA("ImageLabel") then
			goal.ImageTransparency = targetTransparency
		elseif object:IsA("TextLabel") then
			goal.TextTransparency = targetTransparency
		end
	
		local tween = TweenService:Create(object, TweenInfo.new(duration), goal)
		tween:Play()
	
		if targetTransparency == 1 then
			task.delay(duration, function()
				if object ~= gui then
					object.Visible = false
				end
			end)
		end
	
		return tween
	end
	
	-- Resetar UI
	local function resetUI()
		for _, obj in ipairs({loadingIcon, carregando, finished, carregado, aplicando, bypass, aplicado}) do
			obj.Visible = false
			if obj:IsA("ImageLabel") then
				obj.ImageTransparency = 1
			elseif obj:IsA("TextLabel") then
				obj.TextTransparency = 1
			end
		end
	end
	
	resetUI()
	
	-- === ETAPA 1: Aparece LoadingIcon e Carregando... ===
	fade(loadingIcon, 0, fadeDuration)
	fade(carregando, 0, fadeDuration)
	task.wait(3)
	
	-- === ETAPA 2: Some LoadingIcon e Carregando... ===
	fade(loadingIcon, 1, fadeDuration)
	fade(carregando, 1, fadeDuration)
	task.wait(fadeDuration)
	
	-- === ETAPA 3: Aparece Finished e Carregado! ===
	fade(finished, 0, fadeDuration)
	fade(carregado, 0, fadeDuration)
	task.wait(2)
	
	-- === ETAPA 4: Some Finished e Carregado! ===
	fade(finished, 1, fadeDuration)
	fade(carregado, 1, fadeDuration)
	task.wait(fadeDuration)
	
	-- === ETAPA 5: Aparece Aplicando Bypass... e Bypass ===
	fade(aplicando, 0, fadeDuration)
	fade(bypass, 0, fadeDuration)
	task.wait(3)
	
	-- === ETAPA 6: Some Aplicando Bypass... e Bypass ===
	fade(aplicando, 1, fadeDuration)
	fade(bypass, 1, fadeDuration)
	task.wait(fadeDuration)
	
	-- === ETAPA 7: Aparece Aplicado e Finished novamente ===
	fade(aplicado, 0, fadeDuration)
	fade(finished, 0, fadeDuration)
	task.wait(2)
	
	-- === ETAPA FINAL: Fade out geral e desativar o Frame ===
	for _, obj in ipairs(gui:GetChildren()) do
		if obj:IsA("ImageLabel") then
			fade(obj, 1, fadeDuration)
		elseif obj:IsA("TextLabel") then
			fade(obj, 1, fadeDuration)
		end
	end
	
	task.wait(fadeDuration)
	
	gui.Visible = false
	gui.Active = false
	
end;
task.spawn(C_7);
-- StarterGui.MenuPVP.Loading.LocalScript
local function C_8()
local script = G2L["8"];
	local pvp = script.Parent:WaitForChild("PvP")
	local menu = script.Parent:WaitForChild("Menu")
	
	-- Textos completos salvos
	local textoPvP = "PvP"
	local textoMenu = "Menu"
	
	-- Zera os textos antes de animar
	pvp.Text = ""
	menu.Text = ""
	
	-- Função de typewriter
	local function typeWriter(label, fullText, delay)
		for i = 1, #fullText do
			label.Text = string.sub(fullText, 1, i)
			task.wait(delay)
		end
	end
	
	-- Anima o PvP, depois o Menu
	typeWriter(pvp, textoPvP, 0.08)
	task.wait(0.2)
	typeWriter(menu, textoMenu, 0.08)
	
end;
task.spawn(C_8);
-- StarterGui.MenuPVP.Menu.LocalScript
local function C_17()
local script = G2L["17"];
	-- LocalScript dentro do Menu (Frame principal)
	
	local UIS = game:GetService("UserInputService")
	local menu = script.Parent
	local loading = menu.Parent:WaitForChild("Loading")
	
	local dragging = false
	local dragInput, dragStart, startPos
	
	-- Atualiza o estado de interatividade
	local function atualizarInteracao()
		menu.Active = not loading.Visible
	end
	
	-- Roda ao iniciar
	atualizarInteracao()
	
	-- Atualiza sempre que o Loading mudar de visibilidade
	loading:GetPropertyChangedSignal("Visible"):Connect(atualizarInteracao)
	
	local function update(input)
		local delta = input.Position - dragStart
		menu.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
	
	menu.InputBegan:Connect(function(input)
		if loading.Visible then return end -- Bloqueia arrastar
	
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = menu.Position
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	menu.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
	
end;
task.spawn(C_17);
-- StarterGui.MenuPVP.Menu.LocalScript
local function C_18()
local script = G2L["18"];
	local menu = script.Parent
	local btnMinimize = menu.Elementos:WaitForChild("Minimize")
	local btnMinimizado = menu.Parent:WaitForChild("Minimizado")
	
	-- Inicialmente esconde a bolinha
	btnMinimizado.Visible = false
	
	-- Minimizar o menu
	btnMinimize.MouseButton1Click:Connect(function()
		menu.Visible = false
		btnMinimizado.Visible = true
	end)
	
	-- Restaurar o menu
	btnMinimizado.MouseButton1Click:Connect(function()
		menu.Visible = true
		btnMinimizado.Visible = false
	end)
	
	-- Deixar a bolinha arrastável (suporte a mouse e touch)
	local UIS = game:GetService("UserInputService")
	local dragging = false
	local dragInput, dragStart, startPos
	
	local function update(input)
		local delta = input.Position - dragStart
		btnMinimizado.Position = UDim2.new(
			0, startPos.X + delta.X,
			0, startPos.Y + delta.Y
		)
	end
	
	btnMinimizado.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = Vector2.new(
				btnMinimizado.Position.X.Offset,
				btnMinimizado.Position.Y.Offset
			)
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	btnMinimizado.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
	
end;
task.spawn(C_18);
-- StarterGui.MenuPVP.Menu.Elementos.ImagemJogador.LocalScript
local function C_23()
local script = G2L["23"];
	local imageLabel = script.Parent
	local Players = game:GetService("Players")
	local userId = Players.LocalPlayer.UserId
	
	-- Define a imagem como o avatar do jogador
	imageLabel.Image = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. userId .. "&width=420&height=420&format=png"
	
end;
task.spawn(C_23);
-- StarterGui.MenuPVP.Menu.Funcoes.AimToggle.LocalScript
local function C_63()
local script = G2L["63"];
	-- Serviços
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local Camera = workspace.CurrentCamera
	local UserInputService = game:GetService("UserInputService")
	
	-- Referências
	local toggle = script.Parent
	local imagem = toggle:WaitForChild("ImagemAtivado")
	local clickSound = toggle:FindFirstChild("ClickSound")
	local LocalPlayer = Players.LocalPlayer
	local Mouse = LocalPlayer:GetMouse()
	
	-- Variáveis globais
	_G.AimbotAtivo = _G.AimbotAtivo or false
	_G.AIM_FOV = _G.AIM_FOV or 60
	_G.AIM_DISTANCE = _G.AIM_DISTANCE or 175
	_G.AIM_SHOWFOV = _G.AIM_SHOWFOV or true
	_G.AIM_SMOOTHNESS = _G.AIM_SMOOTHNESS or 1.75
	_G.AIM_WALLCHECK = _G.AIM_WALLCHECK or false
	
	-- Estado inicial do botão
	imagem.Visible = _G.AimbotAtivo
	
	-- Detectar mobile
	local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled
	
	-- Remover FOV antigo
	if _G.FOVCircle and typeof(_G.FOVCircle) == "DrawingObject" then
		pcall(function() _G.FOVCircle:Remove() end)
	end
	
	-- Criar círculo FOV
	local circle = Drawing.new("Circle")
	circle.Thickness = 1
	circle.NumSides = 100
	circle.Filled = false
	circle.Transparency = 1
	circle.Color = Color3.fromRGB(0, 255, 0)
	circle.Radius = _G.AIM_FOV
	circle.Visible = _G.AimbotAtivo and _G.AIM_SHOWFOV
	_G.FOVCircle = circle
	
	-- Checar visibilidade
	local function isVisible(targetPart)
		local origin = Camera.CFrame.Position
		local direction = (targetPart.Position - origin).Unit * 1000
		local params = RaycastParams.new()
		params.FilterType = Enum.RaycastFilterType.Blacklist
		params.FilterDescendantsInstances = {LocalPlayer.Character}
		params.IgnoreWater = true
		local result = workspace:Raycast(origin, direction, params)
		return not result or result.Instance:IsDescendantOf(targetPart.Parent)
	end
	
	-- Alvo mais próximo
	local function getNearestTarget()
		local closest = nil
		local shortest = math.huge
		local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
	
		for _, player in ipairs(Players:GetPlayers()) do
			if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
				local head = player.Character.Head
				local pos, onScreen = Camera:WorldToViewportPoint(head.Position)
				local screenDist = (Vector2.new(pos.X, pos.Y) - screenCenter).Magnitude
				local worldDist = (Camera.CFrame.Position - head.Position).Magnitude
	
				if onScreen and screenDist <= _G.AIM_FOV and worldDist <= _G.AIM_DISTANCE then
					if not _G.AIM_WALLCHECK or isVisible(head) then
						if screenDist < shortest then
							shortest = screenDist
							closest = head
						end
					end
				end
			end
		end
	
		return closest
	end
	
	-- ShoulderCamera (mobile)
	local shoulderCam
	local function findShoulderCamera()
		for _, obj in ipairs(getgc(true)) do
			if type(obj) == "table" and rawget(obj, "yaw") and rawget(obj, "pitch") then
				return obj
			end
		end
		return nil
	end
	
	-- Recoil fake mobile
	UserInputService.TouchStarted:Connect(function()
		if _G.AimbotAtivo and shoulderCam then
			shoulderCam.pitch = shoulderCam.pitch - 0.03
		end
	end)
	
	-- Render loop
	RunService.RenderStepped:Connect(function()
		local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
		circle.Position = screenCenter
		circle.Radius = _G.AIM_FOV
		circle.Visible = _G.AIM_SHOWFOV and _G.AimbotAtivo
	
		if not _G.AimbotAtivo then return end
	
		local target = getNearestTarget()
		if target then
			local pos, onScreen = Camera:WorldToViewportPoint(target.Position)
			if onScreen then
				if not isMobile then
					-- ✅ PC CORRIGIDO
					local dx = (pos.X - screenCenter.X)
					local dy = (pos.Y - screenCenter.Y)
					mousemoverel(dx / _G.AIM_SMOOTHNESS, dy / _G.AIM_SMOOTHNESS)
				else
					-- ✅ MOBILE INTACTO
					if not shoulderCam then
						shoulderCam = findShoulderCamera()
					end
					if shoulderCam then
						local camPos = Camera.CFrame.Position
						local targetPos = target.Position
						local targetDir = (targetPos - camPos)
						if targetDir.Magnitude == 0 then return end
						targetDir = targetDir.Unit
						local yaw = math.atan2(-targetDir.X, -targetDir.Z)
						local pitch = math.asin(targetDir.Y)
	
						local function clampDiff(a, b)
							local diff = (a - b + math.pi) % (2 * math.pi) - math.pi
							return diff
						end
	
						local yawDiff = clampDiff(yaw, shoulderCam.yaw)
						local pitchDiff = clampDiff(pitch, shoulderCam.pitch)
	
						local strength = 0.75
						shoulderCam.yaw += yawDiff * strength
						shoulderCam.pitch += pitchDiff * strength
	
						if math.abs(pitchDiff) < 0.02 then
							shoulderCam.pitch = pitch
						end
					end
				end
			end
		end
	end)
	
	-- Toggle de ativação
	toggle.MouseButton1Click:Connect(function()
		if clickSound then clickSound:Play() end
		_G.AimbotAtivo = not _G.AimbotAtivo
		imagem.Visible = _G.AimbotAtivo
	end)
	
end;
task.spawn(C_63);
-- StarterGui.MenuPVP.Menu.Funcoes.ExibirFovToggle.LocalScript
local function C_6a()
local script = G2L["6a"];
	local checkbox = script.Parent
	local imagem = checkbox:WaitForChild("ImagemAtivado")
	local clickSound = checkbox:FindFirstChild("ClickSound")
	
	-- Inicializa a variável
	if _G.AIM_SHOWFOV == nil then
		_G.AIM_SHOWFOV = true
	end
	
	imagem.Visible = _G.AIM_SHOWFOV
	
	-- Clique
	checkbox.MouseButton1Click:Connect(function()
		if clickSound then clickSound:Play() end
		_G.AIM_SHOWFOV = not _G.AIM_SHOWFOV
		imagem.Visible = _G.AIM_SHOWFOV
	end)
	
end;
task.spawn(C_6a);
-- StarterGui.MenuPVP.Menu.Funcoes.AumentarFov.LocalScript
local function C_72()
local script = G2L["72"];
	local botao = script.Parent
	local clickSound = botao:FindFirstChild("ClickSound")
	local menu = botao:FindFirstAncestor("Menu")
	local valorFov = menu.Textos:WaitForChild("ValorFOV")
	
	botao.MouseButton1Click:Connect(function()
		if clickSound then clickSound:Play() end
	
		_G.AIM_FOV = math.clamp((_G.AIM_FOV or 60) + 5, 5, 360)
		valorFov.Text = tostring(_G.AIM_FOV)
	end)
	
end;
task.spawn(C_72);
-- StarterGui.MenuPVP.Menu.Funcoes.DiminuirFov.LocalScript
local function C_76()
local script = G2L["76"];
	local botao = script.Parent
	local clickSound = botao:FindFirstChild("ClickSound")
	local menu = botao:FindFirstAncestor("Menu")
	local valorFov = menu.Textos:WaitForChild("ValorFOV")
	
	botao.MouseButton1Click:Connect(function()
		if clickSound then clickSound:Play() end
	
		_G.AIM_FOV = math.clamp((_G.AIM_FOV or 60) - 5, 5, 360)
		valorFov.Text = tostring(_G.AIM_FOV)
	end)
	
end;
task.spawn(C_76);
-- StarterGui.MenuPVP.Menu.Funcoes.EspPlayersToggle.LocalScript
local function C_79()
local script = G2L["79"];
	local button = script.Parent
	local imagem = button:WaitForChild("ImagemAtivado")
	local clickSound = button:WaitForChild("ClickSound")
	
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local LocalPlayer = Players.LocalPlayer
	local Camera = workspace.CurrentCamera
	
	local espRodando = false
	_G.Esp_Players_Ativo = false
	
	-- Armas reconhecidas
	local armasValidas = {
		["AKM"] = true,
		["AKM PASCOA LIMITADA"] = true,
		["FAL"] = true,
		["G17"] = true,
		["HK416"] = true,
		["HKG3 LIMITADA"] = true,
		["MK47"] = true,
		["USP"] = true
	}
	
	local uiScale = 0.65
	local EspMap = {} -- [Player] = BillboardGui
	
	local function getNomeArma(player)
		local inv = player:FindFirstChild("Inventario")
		local backpack = player:FindFirstChild("Backpack")
	
		if inv then
			for _, item in ipairs(inv:GetChildren()) do
				if armasValidas[item.Name] then
					return item.Name
				end
			end
		end
	
		if backpack then
			for _, item in ipairs(backpack:GetChildren()) do
				if armasValidas[item.Name] then
					return item.Name
				end
			end
		end
	
		return "Sem arma"
	end
	
	local function criarGUI(player)
		if player == LocalPlayer then return end
		if EspMap[player] then return end
	
		local character = player.Character
		if not character or not character:FindFirstChild("HumanoidRootPart") then return end
	
		local EspPlayersGui = Instance.new("BillboardGui")
		EspPlayersGui.Name = "EspPlayersGui"
		EspPlayersGui.Adornee = character.HumanoidRootPart
		EspPlayersGui.AlwaysOnTop = true
		EspPlayersGui.MaxDistance = 500
		EspPlayersGui.Size = UDim2.new(0, 550 * uiScale, 0, 100 * uiScale)
		EspPlayersGui.StudsOffsetWorldSpace = Vector3.new(0, 8, 0)
		EspPlayersGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		EspPlayersGui.Parent = character
	
		local Frame = Instance.new("Frame", EspPlayersGui)
		Frame.Active = true
		Frame.BackgroundColor3 = Color3.fromRGB(53, 53, 53)
		Frame.BackgroundTransparency = 0.15
		Frame.Position = UDim2.new(0.287, -150 * uiScale, 0.25, 0)
		Frame.Size = UDim2.new(0, 496 * uiScale, 0, 55 * uiScale)
		Frame.BorderSizePixel = 0
	
		Instance.new("UICorner", Frame).CornerRadius = UDim.new(0.2, 0)
	
		local UIGradient = Instance.new("UIGradient", Frame)
		UIGradient.Color = ColorSequence.new{
			ColorSequenceKeypoint.new(0, Color3.fromRGB(199,21, 133)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 1, 0))
		}
		UIGradient.Rotation = -90
	
		local Textos = Instance.new("Folder", Frame)
		Textos.Name = "Textos"
	
		local function makeLabel(name, position, size)
			local lbl = Instance.new("TextLabel", Textos)
			lbl.Name = name
			lbl.BackgroundTransparency = 1
			lbl.Position = position
			lbl.Size = size
			lbl.Font = Enum.Font.SourceSansBold
			lbl.Text = ""
			lbl.TextColor3 = Color3.new(1, 1, 1)
			lbl.TextScaled = true
			lbl.TextWrapped = true
			return lbl
		end
	
		makeLabel("NomePlayer", UDim2.new(0.0867, 0, 0.145, 0), UDim2.new(0, 92 * uiScale, 0, 38 * uiScale))
		makeLabel("ValorVida", UDim2.new(0.3004, 0, 0.309, 0), UDim2.new(0, 65 * uiScale, 0, 21 * uiScale))
		makeLabel("Distancia", UDim2.new(0.5282, 0, 0.309, 0), UDim2.new(0, 65 * uiScale, 0, 21 * uiScale))
		makeLabel("Arma", UDim2.new(0.7721, 0, 0.309, 0), UDim2.new(0, 65 * uiScale, 0, 21 * uiScale))
	
		local Imagens = Instance.new("Folder", Frame)
		Imagens.Name = "Imagens"
	
		local function makeIcon(name, pos, id)
			local icon = Instance.new("ImageLabel", Imagens)
			icon.Name = name
			icon.BackgroundTransparency = 1
			icon.Position = pos
			icon.Size = UDim2.new(0, 31 * uiScale, 0, 31 * uiScale)
			icon.Image = id
		end
	
		makeIcon("Player", UDim2.new(0.024, 0, 0.218, 0), "rbxassetid://117259180607823")
		makeIcon("Heart", UDim2.new(0.415, 0, 0.2, 0), "rbxassetid://13321877099")
		makeIcon("Loc", UDim2.new(0.679, 0, 0.218, 0), "rbxassetid://5172066892")
		makeIcon("Gun", UDim2.new(0.913, 0, 0.218, 0), "rbxassetid://16029076040")
	
		local Divisoes = Instance.new("Folder", Frame)
		Divisoes.Name = "Divisoes"
		local function makeDiv(pos)
			local f = Instance.new("Frame", Divisoes)
			f.Size = UDim2.new(0, 2 * uiScale, 0, 55 * uiScale)
			f.Position = pos
			f.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			f.BorderSizePixel = 0
			Instance.new("UICorner", f).CornerRadius = UDim.new(0.4, 0)
		end
	
		makeDiv(UDim2.new(0.296, 0, 0, 0))
		makeDiv(UDim2.new(0.497, 0, -0.018, 0))
		makeDiv(UDim2.new(0.772, 0, -0.018, 0))
	
		EspMap[player] = EspPlayersGui
	end
	
	local function atualizarESP()
		for player, gui in pairs(EspMap) do
			if not _G.Esp_Players_Ativo or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
				if gui then gui.Enabled = false end
				continue
			end
	
			local hrp = player.Character.HumanoidRootPart
			local humanoid = player.Character:FindFirstChild("Humanoid")
			local myHRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

			if not myHRP or not humanoid then continue end

			local dist = (myHRP.Position - hrp.Position).Magnitude
			local scale = math.clamp(1 - (dist / 100), 0.9, 1)
			gui.Size = UDim2.new(0, 550 * uiScale * scale, 0, 100 * uiScale * scale)
			gui.Enabled = true

			local textos = gui:FindFirstChild("Frame"):FindFirstChild("Textos")
			if textos then
				textos.NomePlayer.Text = player.Name
				textos.ValorVida.Text = math.floor(humanoid.Health) .. " HP"
				textos.Distancia.Text = math.floor(dist) .. "m"
				textos.Arma.Text = getNomeArma(player)
			end
		end
	end

	RunService.RenderStepped:Connect(atualizarESP)

	local function initPlayer(p)
		p.CharacterAdded:Connect(function()
			wait(1)
			criarGUI(p)
		end)
		if p.Character then
			criarGUI(p)
		end
	end

	for _, p in ipairs(Players:GetPlayers()) do
		initPlayer(p)
	end

	Players.PlayerAdded:Connect(initPlayer)

	-- BOTÃO
	button.MouseButton1Click:Connect(function()
		_G.Esp_Players_Ativo = not _G.Esp_Players_Ativo
		espRodando = true
		clickSound:Play()
		imagem.Visible = _G.Esp_Players_Ativo
	end)

end;
task.spawn(C_79);
-- StarterGui.MenuPVP.Menu.Funcoes.EspSkeletonToggle.LocalScript
local function C_80()
	local script = G2L["80"];
	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	local RunService = game:GetService("RunService")
	local UserInputService = game:GetService("UserInputService")
	local Camera = workspace.CurrentCamera

	-- Detecta se é Mobile
	local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

	-- CONFIG
	_G.ESP_SKELETON_ENABLED = false
	local ToggleKey = Enum.KeyCode.RightShift
	local Color = Color3.new(8, 0, 8)
	local Thickness = 1.5
	local TeamCheck = false -- true = só inimigos

	-- UI de toggle
	local button = script.Parent
	local sound = button:FindFirstChildOfClass("Sound")
	local imagem = button:FindFirstChild("ImagemAtivado")

	-- Conexões dos ossos
	local BoneConnections = {
		{"Head", "UpperTorso"},
		{"UpperTorso", "LowerTorso"},
		{"UpperTorso", "LeftUpperArm"},
		{"LeftUpperArm", "LeftLowerArm"},
		{"LeftLowerArm", "LeftHand"},
		{"UpperTorso", "RightUpperArm"},
		{"RightUpperArm", "RightLowerArm"},
		{"RightLowerArm", "RightHand"},
		{"LowerTorso", "LeftUpperLeg"},
		{"LeftUpperLeg", "LeftLowerLeg"},
		{"LeftLowerLeg", "LeftFoot"},
		{"LowerTorso", "RightUpperLeg"},
		{"RightUpperLeg", "RightLowerLeg"},
		{"RightLowerLeg", "RightFoot"},
	}

	-- Criação de linhas (diferente para PC e Mobile)
	local ScreenGui
	if isMobile then
		ScreenGui = Instance.new("ScreenGui")
		ScreenGui.Name = "SkeletonESP"
		ScreenGui.IgnoreGuiInset = true
		ScreenGui.ResetOnSpawn = false
		ScreenGui.Parent = game:GetService("CoreGui")
	end

	local function createLine()
		if not isMobile then
			-- PC: usa Drawing
			local line = Drawing.new("Line")
			line.Color = Color
			line.Thickness = Thickness
			line.Visible = false
			return line
		else
			-- Mobile: usa Frame
			local line = Instance.new("Frame")
			line.BackgroundColor3 = Color
			line.BorderSizePixel = 0
			line.AnchorPoint = Vector2.new(0.5, 0.5)
			line.Visible = false
			line.Parent = ScreenGui
			return line
		end
	end

	local function updateLine(line, p1, p2)
		if not isMobile then
			-- PC: mesmo comportamento original
			line.From = Vector2.new(p1.X, p1.Y)
			line.To = Vector2.new(p2.X, p2.Y)
			line.Visible = true
		else
			-- Mobile: rotaciona e redimensiona Frame
			local center = (p1 + p2) / 2
			local length = (p1 - p2).Magnitude
			local angle = math.deg(math.atan2(p2.Y - p1.Y, p2.X - p1.X))

			line.Size = UDim2.new(0, length, 0, Thickness)
			line.Position = UDim2.new(0, center.X, 0, center.Y)
			line.Rotation = angle
			line.Visible = true
		end
	end

	local function hideLine(line)
		line.Visible = false
	end

	local function removeLine(line)
		if not isMobile then
			line:Remove()
		else
			line:Destroy()
		end
	end

	-- Armazenamento
	local skeletons = {}

	-- Função para resetar linhas de todos os players
	local function resetAllSkeletons()
		for _, lines in pairs(skeletons) do
			for _, line in ipairs(lines) do
				if line then hideLine(line) end
			end
		end
	end

	-- Toggle manual pela tecla (PC)
	UserInputService.InputBegan:Connect(function(input, gp)
		if not isMobile and not gp and input.KeyCode == ToggleKey then
			_G.ESP_SKELETON_ENABLED = not _G.ESP_SKELETON_ENABLED
			if sound then sound:Play() end
			if imagem then imagem.Visible = _G.ESP_SKELETON_ENABLED end
			resetAllSkeletons()
		end
	end)

	-- Toggle pela UI
	button.MouseButton1Click:Connect(function()
		_G.ESP_SKELETON_ENABLED = not _G.ESP_SKELETON_ENABLED
		if sound then sound:Play() end
		if imagem then imagem.Visible = _G.ESP_SKELETON_ENABLED end
		resetAllSkeletons()
	end)

	-- Atualização por frame
	RunService.RenderStepped:Connect(function()
		for _, player in ipairs(Players:GetPlayers()) do
			if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				if TeamCheck and player.Team == LocalPlayer.Team then continue end

				if not skeletons[player] then
					skeletons[player] = {}
					for _ = 1, #BoneConnections do
						table.insert(skeletons[player], createLine())
					end
				end

				local char = player.Character
				local lines = skeletons[player]

				-- Garante que número de linhas é igual ao número de ossos
				if #lines ~= #BoneConnections then
					for _, l in ipairs(lines) do if l then removeLine(l) end end
					skeletons[player] = {}
					for _ = 1, #BoneConnections do
						table.insert(skeletons[player], createLine())
					end
					lines = skeletons[player]
				end

				for i, bone in ipairs(BoneConnections) do
					local part1 = char:FindFirstChild(bone[1])
					local part2 = char:FindFirstChild(bone[2])
					local line = lines[i]

					if line then
						if _G.ESP_SKELETON_ENABLED and part1 and part2 then
							local p1, on1 = Camera:WorldToViewportPoint(part1.Position)
							local p2, on2 = Camera:WorldToViewportPoint(part2.Position)
							if on1 and on2 then
								updateLine(line, Vector2.new(p1.X, p1.Y), Vector2.new(p2.X, p2.Y))
							else
								hideLine(line)
							end
						else
							hideLine(line)
						end
					end
				end
			end
		end
	end)

	-- Cleanup
	Players.PlayerRemoving:Connect(function(player)
		if skeletons[player] then
			for _, line in ipairs(skeletons[player]) do
				if line then removeLine(line) end
			end
			skeletons[player] = nil
		end
	end)

end;
task.spawn(C_80);
-- StarterGui.MenuPVP.Menu.Funcoes.CabecaGrandeToggle.LocalScript
local function C_87()
	local script = G2L["87"];
	-- Referências principais
	local toggle = script.Parent
	local imagem = toggle:WaitForChild("ImagemAtivado")
	local clickSound = toggle:FindFirstChild("ClickSound")

	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	local Workspace = game:GetService("Workspace")

	-- Config inicial
	_G.HitboxAtiva = _G.HitboxAtiva or false
	imagem.Visible = _G.HitboxAtiva

	-- Lógica do efeito da cabeça
	local originalSize = Vector3.new(1.1978397369384766, 1.2024002075195312, 1.1979007720947266)
	local fakeHeadName = "FakeHead"
	local tamanhoHitbox = Vector3.new(4.5, 4.5, 4.5)

	local function aplicarEfeito(player)
		if player == LocalPlayer then return end

		local char = Workspace:FindFirstChild(player.Name)
		if not char then return end

		local head = char:FindFirstChild("Head")
		if not head or not head:IsA("BasePart") then return end

		pcall(function()
			if _G.HitboxAtiva then
				head.Size = tamanhoHitbox
				head.Transparency = 1
				local decal = head:FindFirstChildOfClass("Decal")
				if decal then decal:Destroy() end

				if not char:FindFirstChild(fakeHeadName) then
					local fake = Instance.new("Part")
					fake.Name = fakeHeadName
					fake.Size = originalSize
					fake.Position = head.Position
					fake.Anchored = false
					fake.CanCollide = false
					fake.Transparency = 0
					fake.Color = head.Color
					fake.Material = head.Material
					fake.Shape = Enum.PartType.Ball
					fake.Parent = char

					local weld = Instance.new("WeldConstraint")
					weld.Part0 = head
					weld.Part1 = fake
					weld.Parent = fake
				end
			else
				head.Size = originalSize
				head.Transparency = 0
				local fake = char:FindFirstChild(fakeHeadName)
				if fake then fake:Destroy() end
			end
		end)
	end

	local function verificarJogadores()
		for _, player in ipairs(Players:GetPlayers()) do
			aplicarEfeito(player)
		end
	end

	-- Ativação automática em jogadores
	Players.PlayerAdded:Connect(function(player)
		player.CharacterAdded:Connect(function()
			task.wait(0.5)
			aplicarEfeito(player)
		end)
	end)

	for _, player in ipairs(Players:GetPlayers()) do
		player.CharacterAdded:Connect(function()
			task.wait(0.5)
			aplicarEfeito(player)
		end)
	end

	-- Loop para manter efeito ativo
	task.spawn(function()
		while true do
			if _G.HitboxAtiva then
				verificarJogadores()
			end
			task.wait(1)
		end
	end)

	-- Clique no botão (compatível com PC e celular)
	toggle.Activated:Connect(function()
		if clickSound then clickSound:Play() end

		_G.HitboxAtiva = not _G.HitboxAtiva
		imagem.Visible = _G.HitboxAtiva

		if _G.HitboxAtiva then
			verificarJogadores()
		end
	end)

end;
task.spawn(C_87);
-- StarterGui.MenuPVP.Menu.Funcoes.NomeJogador.LocalScript
local function C_8e()
	local script = G2L["8e"];
	local label = script.Parent
	local Players = game:GetService("Players")
	local localPlayer = Players.LocalPlayer

	label.Text = "Olá, " .. localPlayer.DisplayName

end;
task.spawn(C_8e);
-- StarterGui.MenuPVP.Menu.Funcoes.MunicaoInfinitaToggle.LocalScript
local function C_90()
	local script = G2L["90"];
	-- Referências
	local toggle = script.Parent
	local clickSound = toggle:FindFirstChild("ClickSound")

	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	local TARGET_VALUE = 999999999

	-- Função de congelar munição
	local function congelarAmmo(valor)
		if valor:IsA("IntValue") or valor:IsA("NumberValue") then
			valor.Value = TARGET_VALUE
			task.spawn(function()
				while valor.Parent do
					if valor.Value ~= TARGET_VALUE then
						valor.Value = TARGET_VALUE
					end
					task.wait(0.1)
				end
			end)
		end
	end

	-- Verifica se a Tool pertence ao jogador e tem CurrentAmmo
	local function verificarArma(tool)
		if tool:IsA("Tool") and tool:FindFirstChild("CurrentAmmo") then
			if tool.Parent == LocalPlayer.Character then
				congelarAmmo(tool.CurrentAmmo)
			end
		end
	end

	-- Flag para impedir múltiplas execuções
	local jaExecutado = false

	toggle.Activated:Connect(function()

		if jaExecutado then return end
		jaExecutado = true

		if clickSound then
			clickSound:Play()
		end

		-- Executa a função da munição infinita
		if LocalPlayer.Character then
			for _, item in pairs(LocalPlayer.Character:GetChildren()) do
				verificarArma(item)
			end
		end

		LocalPlayer.CharacterAdded:Connect(function(char)
			char.ChildAdded:Connect(verificarArma)
		end)

		if LocalPlayer.Character then
			LocalPlayer.Character.ChildAdded:Connect(verificarArma)
		end

		workspace.DescendantAdded:Connect(function(desc)
			verificarArma(desc)
		end)
	end)

end;
task.spawn(C_90);
-- StarterGui.MenuPVP.Menu.Funcoes.WallCheckToggle.LocalScript
local function C_97()
	local script = G2L["97"];
	-- LocalScript dentro do botão WallCheckToggle

	-- Serviços
	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer

	-- Referências
	local toggle = script.Parent
	local imagem = toggle:WaitForChild("ImagemAtivado")
	local clickSound = toggle:FindFirstChild("ClickSound")

	-- Variável global de controle
	_G.AIM_WALLCHECK = _G.AIM_WALLCHECK or false

	-- Estado inicial
	imagem.Visible = _G.AIM_WALLCHECK

	-- Conexão de clique (PC e Mobile)
	toggle.MouseButton1Click:Connect(function()
		if clickSound then clickSound:Play() end

		-- Alternar estado
		_G.AIM_WALLCHECK = not _G.AIM_WALLCHECK

		-- Atualizar imagem
		imagem.Visible = _G.AIM_WALLCHECK
	end)

end;
task.spawn(C_97);
-- StarterGui.MenuPVP.Menu.Funcoes.TroncoGrandeToggle.LocalScript
local function C_9e()
	local script = G2L["9e"];
	-- Referências principais
	local toggle = script.Parent
	local imagem = toggle:WaitForChild("ImagemAtivado")
	local clickSound = toggle:FindFirstChild("ClickSound")

	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	local Workspace = game:GetService("Workspace")
	local RunService = game:GetService("RunService")

	-- Config inicial
	_G.UpperTorsoToggle = _G.UpperTorsoToggle or false
	imagem.Visible = _G.UpperTorsoToggle

	local originalSize = Vector3.new(1.5772831439971924, 1.484114408493042, 1.0019999742507935)
	local changedSize = Vector3.new(5, 5, 5)

	local function aplicarUpperTorso(player)
		if player == LocalPlayer then return end

		local char = Workspace:FindFirstChild(player.Name)
		if not char then return end

		local upperTorso = char:FindFirstChild("UpperTorso")
		if not upperTorso or not upperTorso:IsA("BasePart") then return end

		pcall(function()
			if _G.UpperTorsoToggle then
				upperTorso.Size = changedSize
				upperTorso.Transparency = 0.8
			else
				upperTorso.Size = originalSize
				upperTorso.Transparency = 0
			end
		end)
	end

	local function verificarJogadores()
		for _, player in ipairs(Players:GetPlayers()) do
			aplicarUpperTorso(player)
		end
	end

	-- Ativação automática em jogadores que entram / que trocam de personagem
	Players.PlayerAdded:Connect(function(player)
		player.CharacterAdded:Connect(function()
			task.wait(0.5)
			aplicarUpperTorso(player)
		end)
	end)

	for _, player in ipairs(Players:GetPlayers()) do
		player.CharacterAdded:Connect(function()
			task.wait(0.5)
			aplicarUpperTorso(player)
		end)
	end

	-- Loop para manter efeito ativo (corrigido para sempre atualizar)
	task.spawn(function()
		while true do
			verificarJogadores()
			task.wait(1)
		end
	end)

	-- Clique no botão para ativar/desativar
	toggle.Activated:Connect(function()
		if clickSound then clickSound:Play() end

		_G.UpperTorsoToggle = not _G.UpperTorsoToggle
		imagem.Visible = _G.UpperTorsoToggle

		verificarJogadores() -- Atualiza imediatamente ao clicar
	end)

end;
task.spawn(C_9e);
-- StarterGui.MenuPVP.Menu.Funcoes.EspBoxToggle.LocalScript
local function C_a5()
	local script = G2L["a5"];
	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	local RunService = game:GetService("RunService")
	local UserInputService = game:GetService("UserInputService")
	local Camera = workspace.CurrentCamera

	-- CONFIGURAÇÕES
	_G.ESP_BOX_ENABLED = false
	local ToggleKey = Enum.KeyCode.RightShift
	local DefaultColor = Color3.fromRGB(237, 4, 74) -- Vermelho padrão
	local FriendOrFactionColor = Color3.fromRGB(0, 255, 0) -- Verde para amigos / mesma facção
	local TextColor = Color3.fromRGB(255, 255, 255)
	local Thickness = 1
	local TeamCheck = false

	-- UI do botão (caso você tenha na interface)
	local button = script.Parent
	local sound = button:FindFirstChildOfClass("ClickSound")
	local imagem = button:FindFirstChild("ImagemAtivado")

	-- Função para descobrir a facção do jogador
	local function getPlayerFaction(playerName)
		local facsOcupadas = workspace:FindFirstChild("SystemFacsRua") and workspace.SystemFacsRua:FindFirstChild("FacsOcupadas")
		if not facsOcupadas then return nil end

		for _, fac in ipairs(facsOcupadas:GetChildren()) do
			local membros = fac:FindFirstChild("Membros")
			if membros and membros:FindFirstChild(playerName) then
				return fac.Name
			end
		end
		return nil
	end

	-- Cache de desenhos
	local drawings = {}

	-- Criação segura
	local function createBox()
		return {
			BoxOutline = Drawing.new("Square"),
			Box = Drawing.new("Square"),
			Name = Drawing.new("Text")
		}
	end

	-- Toggle pela tecla
	UserInputService.InputBegan:Connect(function(input, gp)
		if not gp and input.KeyCode == ToggleKey then
			_G.ESP_BOX_ENABLED = not _G.ESP_BOX_ENABLED
			if sound then sound:Play() end
			if imagem then imagem.Visible = _G.ESP_BOX_ENABLED end
		end
	end)

	-- Toggle pela UI
	button.MouseButton1Click:Connect(function()
		_G.ESP_BOX_ENABLED = not _G.ESP_BOX_ENABLED
		if sound then sound:Play() end
		if imagem then imagem.Visible = _G.ESP_BOX_ENABLED end
	end)

	-- Atualização das boxes
	RunService.RenderStepped:Connect(function()
		for _, player in ipairs(Players:GetPlayers()) do
			if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				if TeamCheck and player.Team == LocalPlayer.Team then continue end

				if not drawings[player] then
					drawings[player] = createBox()
				end

				local char = player.Character
				local hrp = char:FindFirstChild("HumanoidRootPart")
				local head = char:FindFirstChild("Head")

				local box = drawings[player]
				local pos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
				local headPos, onScreen2 = Camera:WorldToViewportPoint(head.Position)

				if _G.ESP_BOX_ENABLED and onScreen and onScreen2 then
					-- Determinar cor dinâmica
					local boxColor = DefaultColor
					local localFaction = getPlayerFaction(LocalPlayer.Name)
					local playerFaction = getPlayerFaction(player.Name)

					if LocalPlayer:IsFriendsWith(player.UserId) then
						boxColor = FriendOrFactionColor
					elseif localFaction and playerFaction and localFaction == playerFaction then
						boxColor = FriendOrFactionColor
					end

					-- Calcular dimensões
					local scale = 1 / (pos.Z + 1) * 100
					local width = math.clamp(40 * scale, 2, 300)
					local height = math.clamp(60 * scale, 2, 500)
					local x = pos.X - width / 2
					local y = pos.Y - height / 2

					-- Box interna
					box.Box.Visible = true
					box.Box.Color = boxColor
					box.Box.Thickness = Thickness
					box.Box.Filled = false
					box.Box.Size = Vector2.new(width, height)
					box.Box.Position = Vector2.new(x, y)

					-- Box outline
					box.BoxOutline.Visible = true
					box.BoxOutline.Color = Color3.new(0, 0, 0)
					box.BoxOutline.Thickness = Thickness + 2
					box.BoxOutline.Filled = false
					box.BoxOutline.Size = Vector2.new(width, height)
					box.BoxOutline.Position = Vector2.new(x, y)

					-- Nome
					box.Name.Visible = true
					box.Name.Color = TextColor
					box.Name.Size = 13
					box.Name.Outline = true
					box.Name.Center = true
					box.Name.Text = player.Name
					box.Name.Position = Vector2.new(pos.X, y - 15)
				else
					box.Box.Visible = false
					box.BoxOutline.Visible = false
					box.Name.Visible = false
				end
			elseif drawings[player] then
				drawings[player].Box.Visible = false
				drawings[player].BoxOutline.Visible = false
				drawings[player].Name.Visible = false
			end
		end
	end)

	-- Limpeza ao sair
	Players.PlayerRemoving:Connect(function(player)
		if drawings[player] then
			for _, v in pairs(drawings[player]) do
				if v.Remove then
					v:Remove()
				end
			end
			drawings[player] = nil
		end
	end)

end;
task.spawn(C_a5);
-- StarterGui.MenuPVP.LocalScript
local function C_cc()
	local script = G2L["cc"];
	local UserInputService = game:GetService("UserInputService")
	local menuPVP = script.Parent
	local scale = 0.85 -- 85% do tamanho original

	-- Verifica se é mobile
	local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

	-- Aplica apenas se for mobile
	if isMobile then
		local elementos = {
			menuPVP:WaitForChild("Loading"),
			menuPVP:WaitForChild("Menu"),
		}

		for _, guiObject in ipairs(elementos) do
			if not guiObject:FindFirstChild("UIScale") then
				local uiScale = Instance.new("UIScale")
				uiScale.Scale = scale
				uiScale.Parent = guiObject
			end
		end
	end

end;
task.spawn(C_cc);

return G2L["1"], require;
